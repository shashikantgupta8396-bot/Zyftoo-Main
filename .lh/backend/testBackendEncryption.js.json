{
    "sourceFile": "backend/testBackendEncryption.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752836234245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752836234245,
            "name": "Commit-0",
            "content": "// Test backend encryption/decryption integration\r\nconst { encryptData, decryptData } = require('../src/utils/cryptoUtil');\r\n\r\nconst testBackendEncryption = () => {\r\n    console.log('üîê Testing Backend Encryption Integration...\\n');\r\n    \r\n    try {\r\n        // Set test encryption key\r\n        process.env.ENCRYPTION_KEY = 'test-encryption-key-for-demo-purposes';\r\n        \r\n        // Test 1: Login data encryption/decryption\r\n        const loginData = {\r\n            phone: '1234567890',\r\n            password: 'testPassword123'\r\n        };\r\n        \r\n        console.log('üìù Original login data:', loginData);\r\n        \r\n        const encryptedLogin = encryptData(loginData);\r\n        console.log('üîí Encrypted login data:', encryptedLogin);\r\n        \r\n        const decryptedLogin = decryptData(encryptedLogin);\r\n        console.log('üîì Decrypted login data:', decryptedLogin);\r\n        \r\n        const loginMatches = JSON.stringify(loginData) === JSON.stringify(decryptedLogin);\r\n        console.log('‚úÖ Login data integrity:', loginMatches ? 'PASSED' : 'FAILED');\r\n        \r\n        console.log('\\n' + '='.repeat(50) + '\\n');\r\n        \r\n        // Test 2: OTP data encryption/decryption\r\n        const otpData = {\r\n            phone: '1234567890',\r\n            otp: '123456',\r\n            purpose: 'signup'\r\n        };\r\n        \r\n        console.log('üìù Original OTP data:', otpData);\r\n        \r\n        const encryptedOtp = encryptData(otpData);\r\n        console.log('üîí Encrypted OTP data:', encryptedOtp);\r\n        \r\n        const decryptedOtp = decryptData(encryptedOtp);\r\n        console.log('üîì Decrypted OTP data:', decryptedOtp);\r\n        \r\n        const otpMatches = JSON.stringify(otpData) === JSON.stringify(decryptedOtp);\r\n        console.log('‚úÖ OTP data integrity:', otpMatches ? 'PASSED' : 'FAILED');\r\n        \r\n        console.log('\\n' + '='.repeat(50) + '\\n');\r\n        \r\n        // Test 3: Signup data encryption/decryption\r\n        const signupData = {\r\n            name: 'John Doe',\r\n            email: 'john@example.com',\r\n            phone: '1234567890',\r\n            password: 'testPassword123',\r\n            confirmPassword: 'testPassword123',\r\n            otp: '123456',\r\n            userType: 'individual',\r\n            gender: 'male',\r\n            dob: '1990-01-01',\r\n            pincode: '123456'\r\n        };\r\n        \r\n        console.log('üìù Original signup data:', signupData);\r\n        \r\n        const encryptedSignup = encryptData(signupData);\r\n        console.log('üîí Encrypted signup data:', encryptedSignup);\r\n        \r\n        const decryptedSignup = decryptData(encryptedSignup);\r\n        console.log('üîì Decrypted signup data:', decryptedSignup);\r\n        \r\n        const signupMatches = JSON.stringify(signupData) === JSON.stringify(decryptedSignup);\r\n        console.log('‚úÖ Signup data integrity:', signupMatches ? 'PASSED' : 'FAILED');\r\n        \r\n        console.log('\\nüéâ All backend encryption tests completed!');\r\n        \r\n        // Test request body format that controllers expect\r\n        console.log('\\nüìã Sample encrypted request body format:');\r\n        console.log('Login:', JSON.stringify({ encryptedData: encryptedLogin }, null, 2));\r\n        \r\n    } catch (error) {\r\n        console.error('‚ùå Backend encryption test failed:', error.message);\r\n    }\r\n};\r\n\r\n// Run tests if this file is executed directly\r\nif (require.main === module) {\r\n    testBackendEncryption();\r\n}\r\n\r\nmodule.exports = { testBackendEncryption };\r\n"
        }
    ]
}