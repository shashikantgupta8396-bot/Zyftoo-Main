{
    "sourceFile": "backend/src/admin/config/permissions.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753440030081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753440030081,
            "name": "Commit-0",
            "content": "/**\r\n * Role-based Permissions Configuration\r\n * \r\n * Defines what actions each role can perform\r\n */\r\n\r\nconst PERMISSIONS = {\r\n  // Category Management\r\n  CATEGORIES: {\r\n    CREATE: 'categories:create',\r\n    READ: 'categories:read',\r\n    UPDATE: 'categories:update',\r\n    DELETE: 'categories:delete',\r\n    BULK_OPERATIONS: 'categories:bulk'\r\n  },\r\n\r\n  // Product Management\r\n  PRODUCTS: {\r\n    CREATE: 'products:create',\r\n    READ: 'products:read',\r\n    UPDATE: 'products:update',\r\n    DELETE: 'products:delete',\r\n    BULK_OPERATIONS: 'products:bulk'\r\n  },\r\n\r\n  // User Management\r\n  USERS: {\r\n    CREATE: 'users:create',\r\n    READ: 'users:read',\r\n    UPDATE: 'users:update',\r\n    DELETE: 'users:delete',\r\n    MANAGE_ROLES: 'users:manage_roles'\r\n  },\r\n\r\n  // Order Management\r\n  ORDERS: {\r\n    READ: 'orders:read',\r\n    UPDATE: 'orders:update',\r\n    DELETE: 'orders:delete',\r\n    EXPORT: 'orders:export'\r\n  },\r\n\r\n  // Content Management\r\n  CONTENT: {\r\n    PAGES: 'content:pages',\r\n    STATIC_FILES: 'content:static_files',\r\n    CONFIGURATIONS: 'content:configurations'\r\n  },\r\n\r\n  // System Administration\r\n  SYSTEM: {\r\n    SETTINGS: 'system:settings',\r\n    LOGS: 'system:logs',\r\n    BACKUPS: 'system:backups',\r\n    MAINTENANCE: 'system:maintenance'\r\n  }\r\n};\r\n\r\nconst ROLE_PERMISSIONS = {\r\n  // Super Admin - Full access\r\n  superadmin: Object.values(PERMISSIONS).flatMap(module => Object.values(module)),\r\n  SuperAdmin: Object.values(PERMISSIONS).flatMap(module => Object.values(module)),\r\n\r\n  // Admin - Most permissions except critical system operations\r\n  admin: [\r\n    ...Object.values(PERMISSIONS.CATEGORIES),\r\n    ...Object.values(PERMISSIONS.PRODUCTS),\r\n    PERMISSIONS.USERS.CREATE,\r\n    PERMISSIONS.USERS.READ,\r\n    PERMISSIONS.USERS.UPDATE,\r\n    ...Object.values(PERMISSIONS.ORDERS),\r\n    ...Object.values(PERMISSIONS.CONTENT)\r\n  ],\r\n  Admin: [\r\n    ...Object.values(PERMISSIONS.CATEGORIES),\r\n    ...Object.values(PERMISSIONS.PRODUCTS),\r\n    PERMISSIONS.USERS.CREATE,\r\n    PERMISSIONS.USERS.READ,\r\n    PERMISSIONS.USERS.UPDATE,\r\n    ...Object.values(PERMISSIONS.ORDERS),\r\n    ...Object.values(PERMISSIONS.CONTENT)\r\n  ],\r\n\r\n  // Manager - Limited permissions\r\n  manager: [\r\n    PERMISSIONS.CATEGORIES.READ,\r\n    PERMISSIONS.CATEGORIES.UPDATE,\r\n    PERMISSIONS.PRODUCTS.READ,\r\n    PERMISSIONS.PRODUCTS.UPDATE,\r\n    PERMISSIONS.ORDERS.READ,\r\n    PERMISSIONS.ORDERS.UPDATE,\r\n    PERMISSIONS.USERS.READ\r\n  ],\r\n\r\n  // Editor - Content management only\r\n  editor: [\r\n    PERMISSIONS.CATEGORIES.READ,\r\n    PERMISSIONS.PRODUCTS.READ,\r\n    PERMISSIONS.PRODUCTS.UPDATE,\r\n    PERMISSIONS.CONTENT.PAGES,\r\n    PERMISSIONS.CONTENT.STATIC_FILES\r\n  ]\r\n};\r\n\r\n/**\r\n * Check if a role has a specific permission\r\n * @param {string} role - User role\r\n * @param {string} permission - Required permission\r\n * @returns {boolean}\r\n */\r\nconst hasPermission = (role, permission) => {\r\n  const rolePermissions = ROLE_PERMISSIONS[role] || [];\r\n  return rolePermissions.includes(permission);\r\n};\r\n\r\n/**\r\n * Get all permissions for a role\r\n * @param {string} role - User role\r\n * @returns {string[]}\r\n */\r\nconst getRolePermissions = (role) => {\r\n  return ROLE_PERMISSIONS[role] || [];\r\n};\r\n\r\n/**\r\n * Check if role can perform bulk operations\r\n * @param {string} role - User role\r\n * @param {string} module - Module name (categories, products, etc.)\r\n * @returns {boolean}\r\n */\r\nconst canPerformBulkOperations = (role, module) => {\r\n  const bulkPermission = PERMISSIONS[module.toUpperCase()]?.BULK_OPERATIONS;\r\n  return bulkPermission && hasPermission(role, bulkPermission);\r\n};\r\n\r\nmodule.exports = {\r\n  PERMISSIONS,\r\n  ROLE_PERMISSIONS,\r\n  hasPermission,\r\n  getRolePermissions,\r\n  canPerformBulkOperations\r\n};\r\n"
        }
    ]
}