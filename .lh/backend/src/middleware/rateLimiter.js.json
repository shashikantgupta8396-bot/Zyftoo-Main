{
    "sourceFile": "backend/src/middleware/rateLimiter.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752831493450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752831493450,
            "name": "Commit-0",
            "content": "const rateLimit = require('express-rate-limit');\r\n\r\n/**\r\n * General rate limiter for API endpoints\r\n */\r\nconst apiLimiter = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  max: 100, // Limit each IP to 100 requests per windowMs\r\n  message: {\r\n    success: false,\r\n    message: 'Too many requests from this IP, please try again later.',\r\n    retryAfter: '15 minutes'\r\n  },\r\n  standardHeaders: true, // Return rate limit info in the `RateLimit-*` headers\r\n  legacyHeaders: false, // Disable the `X-RateLimit-*` headers\r\n  handler: (req, res) => {\r\n    res.status(429).json({\r\n      success: false,\r\n      message: 'Too many requests from this IP, please try again later.',\r\n      retryAfter: '15 minutes'\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Strict rate limiter for authentication endpoints\r\n */\r\nconst authLimiter = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  max: 5, // Limit each IP to 5 login requests per windowMs\r\n  message: {\r\n    success: false,\r\n    message: 'Too many authentication attempts, please try again later.',\r\n    retryAfter: '15 minutes'\r\n  },\r\n  skipSuccessfulRequests: true, // Don't count successful requests\r\n  handler: (req, res) => {\r\n    res.status(429).json({\r\n      success: false,\r\n      message: 'Too many authentication attempts, please try again later.',\r\n      retryAfter: '15 minutes'\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Rate limiter for password reset endpoints\r\n */\r\nconst passwordResetLimiter = rateLimit({\r\n  windowMs: 60 * 60 * 1000, // 1 hour\r\n  max: 3, // Limit each IP to 3 password reset requests per hour\r\n  message: {\r\n    success: false,\r\n    message: 'Too many password reset attempts, please try again later.',\r\n    retryAfter: '1 hour'\r\n  },\r\n  handler: (req, res) => {\r\n    res.status(429).json({\r\n      success: false,\r\n      message: 'Too many password reset attempts, please try again later.',\r\n      retryAfter: '1 hour'\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Rate limiter for OTP requests\r\n */\r\nconst otpLimiter = rateLimit({\r\n  windowMs: 5 * 60 * 1000, // 5 minutes\r\n  max: 3, // Limit each IP to 3 OTP requests per 5 minutes\r\n  message: {\r\n    success: false,\r\n    message: 'Too many OTP requests, please try again later.',\r\n    retryAfter: '5 minutes'\r\n  },\r\n  handler: (req, res) => {\r\n    res.status(429).json({\r\n      success: false,\r\n      message: 'Too many OTP requests, please try again later.',\r\n      retryAfter: '5 minutes'\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Rate limiter for file upload endpoints\r\n */\r\nconst uploadLimiter = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  max: 20, // Limit each IP to 20 upload requests per windowMs\r\n  message: {\r\n    success: false,\r\n    message: 'Too many upload requests, please try again later.',\r\n    retryAfter: '15 minutes'\r\n  },\r\n  handler: (req, res) => {\r\n    res.status(429).json({\r\n      success: false,\r\n      message: 'Too many upload requests, please try again later.',\r\n      retryAfter: '15 minutes'\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Moderate rate limiter for product/order operations\r\n */\r\nconst operationLimiter = rateLimit({\r\n  windowMs: 10 * 60 * 1000, // 10 minutes\r\n  max: 50, // Limit each IP to 50 operations per windowMs\r\n  message: {\r\n    success: false,\r\n    message: 'Too many operations, please try again later.',\r\n    retryAfter: '10 minutes'\r\n  },\r\n  handler: (req, res) => {\r\n    res.status(429).json({\r\n      success: false,\r\n      message: 'Too many operations, please try again later.',\r\n      retryAfter: '10 minutes'\r\n    });\r\n  }\r\n});\r\n\r\nmodule.exports = {\r\n  apiLimiter,\r\n  authLimiter,\r\n  passwordResetLimiter,\r\n  otpLimiter,\r\n  uploadLimiter,\r\n  operationLimiter\r\n};\r\n"
        }
    ]
}