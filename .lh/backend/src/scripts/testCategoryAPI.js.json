{
    "sourceFile": "backend/src/scripts/testCategoryAPI.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753162069678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753162069678,
            "name": "Commit-0",
            "content": "/**\r\n * Test Category API Response\r\n * This script directly tests the category API endpoint to see what data is being returned\r\n */\r\n\r\nconst axios = require('axios');\r\n\r\nconst ADMIN_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NzZhYTJmYzc3YWY4ODU3Njk1ZDA5MiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1MjYwNzMyMCwiZXhwIjoxNzUzMjEyMTIwfQ.ugFuaDCq_ewqIE-dZaql3BB91kaXBIxE0TQmqdYnagI';\r\nconst API_BASE = 'http://localhost:5000/api';\r\n\r\nasync function testCategoryAPI() {\r\n  console.log('üß™ === TESTING CATEGORY API ===');\r\n  console.log('Backend URL:', API_BASE);\r\n  console.log('Endpoint:', '/categories');\r\n  console.log('Auth Token:', ADMIN_TOKEN ? 'Present' : 'Missing');\r\n  \r\n  try {\r\n    console.log('\\n1. Making direct HTTP request to backend...');\r\n    const response = await axios.get(`${API_BASE}/categories`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${ADMIN_TOKEN}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    console.log('\\n2. Raw HTTP Response Details:');\r\n    console.log('   - Status:', response.status);\r\n    console.log('   - Status Text:', response.statusText);\r\n    console.log('   - Headers:', Object.keys(response.headers || {}));\r\n    \r\n    console.log('\\n3. Response Data Analysis:');\r\n    console.log('   - Data Type:', typeof response.data);\r\n    console.log('   - Data Keys:', Object.keys(response.data || {}));\r\n    console.log('   - Full Response Data:', JSON.stringify(response.data, null, 2));\r\n    \r\n    // Check if response has success property\r\n    if (response.data && typeof response.data === 'object') {\r\n      console.log('\\n4. Response Structure:');\r\n      console.log('   - Has success property:', 'success' in response.data);\r\n      console.log('   - Success value:', response.data.success);\r\n      console.log('   - Has data property:', 'data' in response.data);\r\n      console.log('   - Data property type:', typeof response.data.data);\r\n      console.log('   - Data is array:', Array.isArray(response.data.data));\r\n      \r\n      if (Array.isArray(response.data.data)) {\r\n        console.log('   - Data array length:', response.data.data.length);\r\n        console.log('\\n5. Category Data Analysis:');\r\n        response.data.data.forEach((category, index) => {\r\n          console.log(`   Category ${index + 1}:`);\r\n          console.log(`     - ID: ${category._id || category.id}`);\r\n          console.log(`     - Name: ${category.name}`);\r\n          console.log(`     - Has Parent: ${!!category.parent}`);\r\n          console.log(`     - Parent: ${category.parent}`);\r\n          console.log(`     - Status: ${category.status}`);\r\n          console.log(`     - Full Object:`, category);\r\n        });\r\n        \r\n        // Summary\r\n        const mainCategories = response.data.data.filter(cat => !cat.parent);\r\n        const subCategories = response.data.data.filter(cat => cat.parent);\r\n        console.log('\\n6. Summary:');\r\n        console.log(`   - Total Categories: ${response.data.data.length}`);\r\n        console.log(`   - Main Categories: ${mainCategories.length}`);\r\n        console.log(`   - Sub Categories: ${subCategories.length}`);\r\n        \r\n      } else if (response.data.data) {\r\n        console.log('   - Data is not an array, type:', typeof response.data.data);\r\n        console.log('   - Data content:', response.data.data);\r\n      }\r\n    }\r\n    \r\n    console.log('\\n‚úÖ API Test Completed Successfully');\r\n    \r\n  } catch (error) {\r\n    console.error('\\n‚ùå API Test Failed:');\r\n    console.error('Error Details:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      data: error.response?.data\r\n    });\r\n    \r\n    if (error.response) {\r\n      console.error('Response Error Data:', JSON.stringify(error.response.data, null, 2));\r\n    }\r\n  }\r\n}\r\n\r\n// Also test the database directly\r\nasync function testDirectDB() {\r\n  console.log('\\nüóÑÔ∏è === TESTING DATABASE DIRECTLY ===');\r\n  \r\n  try {\r\n    // Import the database connection and models\r\n    const mongoose = require('mongoose');\r\n    require('../config/db');\r\n    const Category = require('../models/Category');\r\n    \r\n    console.log('\\n1. Database Connection Status:', mongoose.connection.readyState);\r\n    \r\n    if (mongoose.connection.readyState !== 1) {\r\n      console.log('Connecting to database...');\r\n      await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/nic-gifting');\r\n    }\r\n    \r\n    console.log('\\n2. Querying categories directly from database...');\r\n    const dbCategories = await Category.find({}).populate('parent', 'name');\r\n    \r\n    console.log('\\n3. Database Results:');\r\n    console.log('   - Total documents found:', dbCategories.length);\r\n    \r\n    dbCategories.forEach((cat, index) => {\r\n      console.log(`   Category ${index + 1}:`);\r\n      console.log(`     - ID: ${cat._id}`);\r\n      console.log(`     - Name: ${cat.name}`);\r\n      console.log(`     - Parent: ${cat.parent ? cat.parent.name || cat.parent : 'None'}`);\r\n      console.log(`     - Status: ${cat.status}`);\r\n      console.log(`     - Created: ${cat.createdAt}`);\r\n    });\r\n    \r\n    const mainCats = dbCategories.filter(cat => !cat.parent);\r\n    const subCats = dbCategories.filter(cat => cat.parent);\r\n    \r\n    console.log('\\n4. Database Summary:');\r\n    console.log(`   - Total in DB: ${dbCategories.length}`);\r\n    console.log(`   - Main Categories: ${mainCats.length}`);\r\n    console.log(`   - Sub Categories: ${subCats.length}`);\r\n    \r\n  } catch (error) {\r\n    console.error('\\n‚ùå Database Test Failed:', error.message);\r\n  }\r\n}\r\n\r\n// Run both tests\r\nasync function runAllTests() {\r\n  await testCategoryAPI();\r\n  await testDirectDB();\r\n  console.log('\\nüèÅ All tests completed');\r\n  process.exit(0);\r\n}\r\n\r\nrunAllTests();\r\n"
        }
    ]
}