{
    "sourceFile": "backend/seedDatabase.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753113503121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753113503121,
            "name": "Commit-0",
            "content": "const mongoose = require('mongoose');\r\nconst Category = require('./src/models/Category');\r\nconst PageConfig = require('./src/models/PageConfig');\r\nrequire('dotenv').config();\r\n\r\n// Set mongoose options to avoid deprecation warnings\r\nmongoose.set('strictQuery', false);\r\n\r\n// Connect to MongoDB with better error handling\r\nconst connectToDatabase = async () => {\r\n  try {\r\n    const conn = await mongoose.connect(process.env.MONGO_URI, {\r\n      serverSelectionTimeoutMS: 30000, // Wait up to 30 seconds\r\n      socketTimeoutMS: 45000,\r\n      maxPoolSize: 10,\r\n    });\r\n    console.log(`‚úÖ MongoDB Connected: ${conn.connection.host}`);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(`‚ùå MongoDB connection failed: ${error.message}`);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst seedCategories = async () => {\r\n  try {\r\n    console.log('üå± Seeding categories...');\r\n    \r\n    // Clear existing categories\r\n    await Category.deleteMany({});\r\n    await PageConfig.deleteMany({});\r\n    \r\n    // Sample categories\r\n    const categories = [\r\n      {\r\n        name: 'Fashion & Clothing',\r\n        description: 'Trendy clothes and fashion accessories',\r\n        image: {\r\n          url: '/assets/img/product/category/fashion.jpg',\r\n          filename: 'fashion.jpg'\r\n        },\r\n        status: true\r\n      },\r\n      {\r\n        name: 'Electronics',\r\n        description: 'Latest gadgets and electronic devices',\r\n        image: {\r\n          url: '/assets/img/product/category/electronics.jpg',\r\n          filename: 'electronics.jpg'\r\n        },\r\n        status: true\r\n      },\r\n      {\r\n        name: 'Home & Living',\r\n        description: 'Home decor and living essentials',\r\n        image: {\r\n          url: '/assets/img/product/category/home.jpg',\r\n          filename: 'home.jpg'\r\n        },\r\n        status: true\r\n      },\r\n      {\r\n        name: 'Health & Beauty',\r\n        description: 'Beauty products and health supplements',\r\n        image: {\r\n          url: '/assets/img/product/category/beauty.jpg',\r\n          filename: 'beauty.jpg'\r\n        },\r\n        status: true\r\n      },\r\n      {\r\n        name: 'Sports & Outdoor',\r\n        description: 'Sports equipment and outdoor gear',\r\n        image: {\r\n          url: '/assets/img/product/category/sports.jpg',\r\n          filename: 'sports.jpg'\r\n        },\r\n        status: true\r\n      },\r\n      {\r\n        name: 'Books & Media',\r\n        description: 'Books, magazines, and digital media',\r\n        image: {\r\n          url: '/assets/img/product/category/books.jpg',\r\n          filename: 'books.jpg'\r\n        },\r\n        status: true\r\n      },\r\n      {\r\n        name: 'Toys & Games',\r\n        description: 'Fun toys and games for all ages',\r\n        image: {\r\n          url: '/assets/img/product/category/toys.jpg',\r\n          filename: 'toys.jpg'\r\n        },\r\n        status: true\r\n      },\r\n      {\r\n        name: 'Food & Beverages',\r\n        description: 'Delicious food and refreshing drinks',\r\n        image: {\r\n          url: '/assets/img/product/category/food.jpg',\r\n          filename: 'food.jpg'\r\n        },\r\n        status: true\r\n      }\r\n    ];\r\n    \r\n    // Insert categories\r\n    const insertedCategories = await Category.insertMany(categories);\r\n    console.log(`‚úÖ Inserted ${insertedCategories.length} categories`);\r\n    \r\n    // Create default page configuration for home page\r\n    const homePageConfig = {\r\n      _id: 'home',\r\n      name: 'Home Page',\r\n      slug: '/',\r\n      sections: [\r\n        {\r\n          sectionType: 'categorySection',\r\n          enabled: true,\r\n          order: 1,\r\n          config: {\r\n            maxCategories: 6,\r\n            layout: 'grid',\r\n            showSubcategories: true,\r\n            categories: insertedCategories.slice(0, 6).map((cat, index) => ({\r\n              categoryId: cat._id.toString(),\r\n              enabled: true,\r\n              order: index\r\n            }))\r\n          }\r\n        },\r\n        {\r\n          sectionType: 'sliderSection',\r\n          enabled: true,\r\n          order: 2,\r\n          config: {\r\n            autoplay: true,\r\n            duration: 5000,\r\n            slides: []\r\n          }\r\n        },\r\n        {\r\n          sectionType: 'productSection',\r\n          enabled: true,\r\n          order: 3,\r\n          config: {\r\n            title: 'Featured Products',\r\n            maxProducts: 8,\r\n            category: null\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    \r\n    const homeConfig = new PageConfig(homePageConfig);\r\n    await homeConfig.save();\r\n    console.log('‚úÖ Created home page configuration');\r\n    \r\n    // Create corporate page configuration\r\n    const corporatePageConfig = {\r\n      _id: 'corporate',\r\n      name: 'Corporate Page',\r\n      slug: '/corporate',\r\n      sections: [\r\n        {\r\n          sectionType: 'categorySection',\r\n          enabled: true,\r\n          order: 1,\r\n          config: {\r\n            maxCategories: 4,\r\n            layout: 'grid',\r\n            showSubcategories: false,\r\n            categories: insertedCategories.slice(0, 4).map((cat, index) => ({\r\n              categoryId: cat._id.toString(),\r\n              enabled: true,\r\n              order: index\r\n            }))\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    \r\n    const corporateConfig = new PageConfig(corporatePageConfig);\r\n    await corporateConfig.save();\r\n    console.log('‚úÖ Created corporate page configuration');\r\n    \r\n    console.log('\\nüéâ Database seeded successfully!');\r\n    console.log(`üì¶ Categories: ${insertedCategories.length}`);\r\n    console.log('üìÑ Pages: home, corporate');\r\n    \r\n    // Log sample category IDs for reference\r\n    console.log('\\nüìã Sample Category IDs:');\r\n    insertedCategories.forEach(cat => {\r\n      console.log(`  ${cat.name}: ${cat._id}`);\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('‚ùå Error seeding database:', error);\r\n  } finally {\r\n    await mongoose.connection.close();\r\n    console.log('üîå Database connection closed');\r\n  }\r\n};\r\n\r\n// Run the seed function with proper connection handling\r\nconst runSeed = async () => {\r\n  const connected = await connectToDatabase();\r\n  if (connected) {\r\n    await seedCategories();\r\n  } else {\r\n    console.log('‚ùå Could not connect to database. Please check your MongoDB connection.');\r\n    process.exit(1);\r\n  }\r\n};\r\n\r\n// Execute the seed process\r\nrunSeed();\r\n"
        }
    ]
}