{
    "sourceFile": "Ninico/app/corporate/shop-details/[id]/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753640078111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753640078111,
            "name": "Commit-0",
            "content": "'use client'\r\nimport Layout from \"@/components/layout/Layout\"\r\nimport CorporateProtectedRoute from '@/components/auth/CorporateProtectedRoute'\r\nimport Link from \"next/link\"\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport { useParams } from 'next/navigation'\r\nimport AuthContext from '@/components/context/AuthContext'\r\nimport { getDisplayPrice, formatPrice, shouldShowCorporatePricing, getMinimumCorporateQuantity, requiresCustomQuote } from '@/util/productPricingHelper'\r\n\r\nexport default function CorporateProductDetails() {\r\n    const [product, setProduct] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [selectedTier, setSelectedTier] = useState(null)\r\n    const [showQuoteModal, setShowQuoteModal] = useState(false)\r\n    const [activeImageIndex, setActiveImageIndex] = useState(0)\r\n    \r\n    const { user } = useContext(AuthContext)\r\n    const params = useParams()\r\n    \r\n    useEffect(() => {\r\n        const productId = params.id\r\n        if (productId) {\r\n            loadProduct(productId)\r\n        }\r\n    }, [params.id])\r\n\r\n    useEffect(() => {\r\n        if (product && shouldShowCorporatePricing(user, product)) {\r\n            const minQty = getMinimumCorporateQuantity(product)\r\n            setQuantity(minQty)\r\n            \r\n            // Auto-select first tier\r\n            if (product.corporatePricing?.priceTiers?.length > 0) {\r\n                setSelectedTier(0)\r\n            }\r\n        }\r\n    }, [product, user])\r\n    \r\n    const loadProduct = async (id) => {\r\n        setLoading(true)\r\n        try {\r\n            // In production, this would be an API call to the corporate products endpoint\r\n            // For now, using sample data with corporate pricing\r\n            const sampleProduct = {\r\n                id: id,\r\n                name: \"Corporate Gift Package - Premium Set\",\r\n                price: 499, // Legacy price for compatibility\r\n                retailPrice: {\r\n                    mrp: 699,\r\n                    sellingPrice: 499,\r\n                    discount: 10,\r\n                    currency: 'INR'\r\n                },\r\n                corporatePricing: {\r\n                    enabled: true,\r\n                    minimumOrderQuantity: 50,\r\n                    priceTiers: [\r\n                        {\r\n                            minQuantity: 50,\r\n                            maxQuantity: 99,\r\n                            pricePerUnit: 450,\r\n                            discount: 10,\r\n                            description: \"Small bulk order discount\"\r\n                        },\r\n                        {\r\n                            minQuantity: 100,\r\n                            maxQuantity: 499,\r\n                            pricePerUnit: 399,\r\n                            discount: 20,\r\n                            description: \"Medium bulk order - Best value\"\r\n                        },\r\n                        {\r\n                            minQuantity: 500,\r\n                            maxQuantity: 999,\r\n                            pricePerUnit: 349,\r\n                            discount: 30,\r\n                            description: \"Large bulk order - Premium savings\"\r\n                        },\r\n                        {\r\n                            minQuantity: 1000,\r\n                            maxQuantity: null,\r\n                            pricePerUnit: 299,\r\n                            discount: 40,\r\n                            description: \"Enterprise level pricing\"\r\n                        }\r\n                    ],\r\n                    customQuoteThreshold: 5000\r\n                },\r\n                category: \"Corporate Gifts\",\r\n                rating: 4.5,\r\n                reviews: 150,\r\n                stock: \"In Stock\",\r\n                sku: \"CORP-GFT-001\",\r\n                description: \"Premium corporate gift package perfect for employee appreciation, client gifts, and corporate events. Includes high-quality items that represent your brand professionally.\",\r\n                images: [\r\n                    \"/assets/img/product/product-1.jpg\",\r\n                    \"/assets/img/product/product-2.jpg\",\r\n                    \"/assets/img/product/product-3.jpg\"\r\n                ],\r\n                categories: [\"Corporate Gifts\", \"Premium\", \"Bulk Orders\"],\r\n                tags: [\"corporate\", \"gifts\", \"premium\", \"bulk\"]\r\n            }\r\n            \r\n            setProduct(sampleProduct)\r\n        } catch (error) {\r\n            console.error('Error loading product:', error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleQuantityChange = (newQuantity) => {\r\n        const qty = Math.max(1, parseInt(newQuantity) || 1)\r\n        setQuantity(qty)\r\n        \r\n        // Auto-select appropriate tier\r\n        if (product?.corporatePricing?.priceTiers) {\r\n            const tierIndex = product.corporatePricing.priceTiers.findIndex(tier => \r\n                qty >= tier.minQuantity && (!tier.maxQuantity || qty <= tier.maxQuantity)\r\n            )\r\n            setSelectedTier(tierIndex >= 0 ? tierIndex : null)\r\n        }\r\n    }\r\n\r\n    const handleTierSelect = (tierIndex) => {\r\n        const tier = product.corporatePricing.priceTiers[tierIndex]\r\n        if (tier) {\r\n            setSelectedTier(tierIndex)\r\n            setQuantity(tier.minQuantity)\r\n        }\r\n    }\r\n\r\n    const pricingInfo = product ? getDisplayPrice(product, user, quantity) : null\r\n    const totalPrice = pricingInfo ? pricingInfo.price * quantity : 0\r\n    const needsQuote = product ? requiresCustomQuote(product, quantity) : false\r\n\r\n    if (loading) {\r\n        return (\r\n            <CorporateProtectedRoute>\r\n                <Layout headerStyle={1} footerStyle={2}>\r\n                    <div className=\"container py-5\">\r\n                        <div className=\"text-center\">\r\n                            <div className=\"spinner-border text-primary\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                            <p className=\"mt-3\">Loading product details...</p>\r\n                        </div>\r\n                    </div>\r\n                </Layout>\r\n            </CorporateProtectedRoute>\r\n        )\r\n    }\r\n\r\n    if (!product) {\r\n        return (\r\n            <CorporateProtectedRoute>\r\n                <Layout headerStyle={1} footerStyle={2}>\r\n                    <div className=\"container py-5\">\r\n                        <div className=\"text-center\">\r\n                            <h1>Product Not Found</h1>\r\n                            <Link href=\"/CorporateHome\" className=\"btn btn-primary mt-3\">\r\n                                Back to Corporate Home\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Layout>\r\n            </CorporateProtectedRoute>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <CorporateProtectedRoute>\r\n            <Layout headerStyle={1} footerStyle={2}>\r\n                <section className=\"tpshop-area pt-80 pb-80\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6\">\r\n                                {/* Product Images */}\r\n                                <div className=\"tpproduct-details__img\">\r\n                                    <div className=\"tpproduct-details__img-main\">\r\n                                        <img \r\n                                            src={product.images[activeImageIndex]} \r\n                                            alt={product.name}\r\n                                            style={{ width: '100%', height: '400px', objectFit: 'cover' }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"tpproduct-details__img-thumbs mt-3\">\r\n                                        <div className=\"d-flex gap-2\">\r\n                                            {product.images.map((image, index) => (\r\n                                                <img \r\n                                                    key={index}\r\n                                                    src={image} \r\n                                                    alt={`${product.name} view ${index + 1}`}\r\n                                                    style={{ \r\n                                                        width: '80px', \r\n                                                        height: '80px', \r\n                                                        objectFit: 'cover',\r\n                                                        cursor: 'pointer',\r\n                                                        border: activeImageIndex === index ? '2px solid #007bff' : '1px solid #ddd'\r\n                                                    }}\r\n                                                    onClick={() => setActiveImageIndex(index)}\r\n                                                />\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"col-lg-6\">\r\n                                {/* Product Info */}\r\n                                <div className=\"tpproduct-details__content\">\r\n                                    {/* Corporate Badge */}\r\n                                    <div className=\"corporate-badge mb-3\">\r\n                                        <span className=\"badge bg-primary\">Corporate Exclusive</span>\r\n                                        <span className=\"badge bg-success ms-2\">Bulk Pricing Available</span>\r\n                                    </div>\r\n\r\n                                    <h3 className=\"tpproduct-details__title\">{product.name}</h3>\r\n                                    \r\n                                    <div className=\"tpproduct-details__meta mb-3\">\r\n                                        <span>SKU: <strong>{product.sku}</strong></span>\r\n                                        <span className=\"ms-3\">Category: <strong>{product.category}</strong></span>\r\n                                        <span className=\"ms-3 text-success\">✓ {product.stock}</span>\r\n                                    </div>\r\n\r\n                                    {/* Corporate Pricing Tiers */}\r\n                                    {shouldShowCorporatePricing(user, product) && (\r\n                                        <div className=\"corporate-pricing-section mb-4\">\r\n                                            <h4>Bulk Pricing Tiers</h4>\r\n                                            <div className=\"pricing-tiers\">\r\n                                                {product.corporatePricing.priceTiers.map((tier, index) => (\r\n                                                    <div \r\n                                                        key={index}\r\n                                                        className={`tier-card p-3 mb-2 border rounded cursor-pointer ${selectedTier === index ? 'border-primary bg-light' : 'border-secondary'}`}\r\n                                                        onClick={() => handleTierSelect(index)}\r\n                                                        style={{ cursor: 'pointer' }}\r\n                                                    >\r\n                                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                            <div>\r\n                                                                <strong>\r\n                                                                    {tier.minQuantity} - {tier.maxQuantity || '∞'} units\r\n                                                                </strong>\r\n                                                                <div className=\"text-muted small\">{tier.description}</div>\r\n                                                            </div>\r\n                                                            <div className=\"text-end\">\r\n                                                                <div className=\"price fw-bold text-primary\">\r\n                                                                    {formatPrice(tier.pricePerUnit)}/unit\r\n                                                                </div>\r\n                                                                {tier.discount > 0 && (\r\n                                                                    <div className=\"text-success small\">\r\n                                                                        Save {tier.discount}%\r\n                                                                    </div>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Quantity & Pricing */}\r\n                                    <div className=\"quantity-pricing-section mb-4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <label className=\"form-label\">Quantity:</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <button \r\n                                                        className=\"btn btn-outline-secondary\" \r\n                                                        onClick={() => handleQuantityChange(quantity - 1)}\r\n                                                        disabled={quantity <= getMinimumCorporateQuantity(product)}\r\n                                                    >\r\n                                                        -\r\n                                                    </button>\r\n                                                    <input \r\n                                                        type=\"number\" \r\n                                                        className=\"form-control text-center\"\r\n                                                        value={quantity}\r\n                                                        min={getMinimumCorporateQuantity(product)}\r\n                                                        onChange={(e) => handleQuantityChange(e.target.value)}\r\n                                                    />\r\n                                                    <button \r\n                                                        className=\"btn btn-outline-secondary\"\r\n                                                        onClick={() => handleQuantityChange(quantity + 1)}\r\n                                                    >\r\n                                                        +\r\n                                                    </button>\r\n                                                </div>\r\n                                                <small className=\"text-muted\">\r\n                                                    Minimum order: {getMinimumCorporateQuantity(product)} units\r\n                                                </small>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"pricing-display\">\r\n                                                    <div className=\"unit-price\">\r\n                                                        <small>Price per unit:</small>\r\n                                                        <div className=\"h5 text-primary mb-1\">\r\n                                                            {formatPrice(pricingInfo?.price || 0)}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"total-price\">\r\n                                                        <small>Total amount:</small>\r\n                                                        <div className=\"h4 fw-bold text-success\">\r\n                                                            {formatPrice(totalPrice)}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Action Buttons */}\r\n                                    <div className=\"product-actions mb-4\">\r\n                                        {needsQuote ? (\r\n                                            <button \r\n                                                className=\"btn btn-warning btn-lg me-3\"\r\n                                                onClick={() => setShowQuoteModal(true)}\r\n                                            >\r\n                                                <i className=\"fal fa-file-alt me-2\"></i>\r\n                                                Request Custom Quote\r\n                                            </button>\r\n                                        ) : (\r\n                                            <>\r\n                                                <button className=\"btn btn-primary btn-lg me-3\">\r\n                                                    <i className=\"fal fa-shopping-cart me-2\"></i>\r\n                                                    Add to Cart\r\n                                                </button>\r\n                                                <button className=\"btn btn-success btn-lg\">\r\n                                                    <i className=\"fal fa-credit-card me-2\"></i>\r\n                                                    Quick Order\r\n                                                </button>\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* Corporate Benefits */}\r\n                                    <div className=\"corporate-benefits\">\r\n                                        <h5>Corporate Benefits</h5>\r\n                                        <ul className=\"list-unstyled\">\r\n                                            <li><i className=\"fal fa-check text-success me-2\"></i>Free bulk shipping</li>\r\n                                            <li><i className=\"fal fa-check text-success me-2\"></i>Custom packaging with your logo</li>\r\n                                            <li><i className=\"fal fa-check text-success me-2\"></i>GST invoice provided</li>\r\n                                            <li><i className=\"fal fa-check text-success me-2\"></i>Net 30/60 payment terms available</li>\r\n                                            <li><i className=\"fal fa-check text-success me-2\"></i>Priority customer support</li>\r\n                                            <li><i className=\"fal fa-check text-success me-2\"></i>Volume discounts on repeat orders</li>\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                    {/* Product Description */}\r\n                                    <div className=\"product-description mt-4\">\r\n                                        <h5>Product Description</h5>\r\n                                        <p>{product.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/* Custom Quote Modal */}\r\n                {showQuoteModal && (\r\n                    <div className=\"modal fade show d-block\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n                        <div className=\"modal-dialog modal-lg\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\">Request Custom Quote</h5>\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"btn-close\"\r\n                                        onClick={() => setShowQuoteModal(false)}\r\n                                    ></button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"quote-details mb-3\">\r\n                                        <h6>Quote Details</h6>\r\n                                        <p><strong>Product:</strong> {product.name}</p>\r\n                                        <p><strong>Quantity:</strong> {quantity.toLocaleString()} units</p>\r\n                                        <p><strong>Estimated Value:</strong> {formatPrice(totalPrice)}</p>\r\n                                    </div>\r\n                                    <form>\r\n                                        <div className=\"mb-3\">\r\n                                            <label className=\"form-label\">Additional Requirements</label>\r\n                                            <textarea \r\n                                                className=\"form-control\" \r\n                                                rows=\"4\"\r\n                                                placeholder=\"Please describe any specific requirements, customization needs, delivery timeline, etc.\"\r\n                                            ></textarea>\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <label className=\"form-label\">Expected Delivery Date</label>\r\n                                            <input type=\"date\" className=\"form-control\" />\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"btn btn-secondary\"\r\n                                        onClick={() => setShowQuoteModal(false)}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\">\r\n                                        Submit Quote Request\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <style jsx>{`\r\n                    .corporate-badge .badge {\r\n                        font-size: 0.8em;\r\n                    }\r\n                    \r\n                    .pricing-tiers .tier-card {\r\n                        transition: all 0.3s ease;\r\n                    }\r\n                    \r\n                    .pricing-tiers .tier-card:hover {\r\n                        transform: translateY(-2px);\r\n                        box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n                    }\r\n                    \r\n                    .pricing-display {\r\n                        background: #f8f9fa;\r\n                        padding: 1rem;\r\n                        border-radius: 8px;\r\n                        border: 1px solid #dee2e6;\r\n                    }\r\n                    \r\n                    .corporate-benefits ul li {\r\n                        padding: 0.25rem 0;\r\n                    }\r\n                    \r\n                    .quantity-pricing-section .input-group {\r\n                        max-width: 150px;\r\n                    }\r\n                `}</style>\r\n            </Layout>\r\n        </CorporateProtectedRoute>\r\n    )\r\n}\r\n"
        }
    ]
}