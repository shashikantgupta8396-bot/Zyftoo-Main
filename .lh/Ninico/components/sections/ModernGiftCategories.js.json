{
    "sourceFile": "Ninico/components/sections/ModernGiftCategories.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1753441696954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753444479580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import Link from \"next/link\";\r\n import Image from \"next/image\";\r\n import { useState, useEffect } from \"react\";\r\n import { giftPageCategories, giftCategoriesMetadata } from \"@/data/giftPageCategories\";\r\n-import { ModernCard, ModernLoadingOverlay, ModernSkeleton } from \"@/components/ui\";\r\n+import styles from './ModernGiftCategories.module.css';\r\n \r\n export default function ModernGiftCategories() {\r\n   const [activeCategory, setActiveCategory] = useState(null);\r\n   const [categories] = useState(giftPageCategories);\r\n@@ -30,26 +30,26 @@\n     }));\r\n   };\r\n \r\n   const ImageFallback = ({ name }) => (\r\n-    <div className=\"w-full h-48 bg-gradient-to-br from-blue-500 to-blue-600 flex items-center justify-center rounded-modern-xl\">\r\n-      <span className=\"text-white text-3xl font-bold\">\r\n+    <div className={styles.imageFallback}>\r\n+      <span>\r\n         {name?.charAt(0)?.toUpperCase() || '?'}\r\n       </span>\r\n     </div>\r\n   );\r\n \r\n   if (!isClient) {\r\n     return (\r\n-      <section className=\"py-20 bg-gradient-to-b from-gray-50 to-white\">\r\n-        <div className=\"container-modern\">\r\n-          <div className=\"text-center mb-16\">\r\n-            <ModernSkeleton height=\"h-8\" width=\"w-64\" className=\"mx-auto mb-4\" />\r\n-            <ModernSkeleton height=\"h-4\" width=\"w-96\" className=\"mx-auto\" />\r\n+      <section className={styles.skeletonContainer}>\r\n+        <div className={styles.modernContainer}>\r\n+          <div className={styles.skeletonHeader}>\r\n+            <div className={`${styles.skeleton} ${styles.skeletonTitle}`} />\r\n+            <div className={`${styles.skeleton} ${styles.skeletonDescription}`} />\r\n           </div>\r\n-          <div className=\"grid-modern grid-modern--3 lg:grid-cols-4\">\r\n+          <div className={styles.categoriesGrid}>\r\n             {[1, 2, 3, 4, 5, 6].map(i => (\r\n-              <ModernSkeleton key={i} height=\"h-80\" rounded=\"rounded-modern-2xl\" />\r\n+              <div key={i} className={`${styles.skeleton} ${styles.skeletonCard}`} />\r\n             ))}\r\n           </div>\r\n         </div>\r\n       </section>\r\n@@ -57,48 +57,97 @@\n   }\r\n \r\n   if (!categories || categories.length === 0) {\r\n     return (\r\n-      <section className=\"py-20 bg-gradient-to-b from-gray-50 to-white\">\r\n-        <div className=\"container-modern text-center\">\r\n-          <div className=\"max-w-md mx-auto\">\r\n-            <div className=\"w-20 h-20 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center\">\r\n-              <svg className=\"w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n-              </svg>\r\n-            </div>\r\n-            <h3 className=\"text-xl font-semibold text-gray-700 mb-2\">No Categories Available</h3>\r\n-            <p className=\"text-gray-500\">Check back later for our gift categories.</p>\r\n+      <section className={styles.emptyState}>\r\n+        <div className={styles.emptyStateContainer}>\r\n+          <div className={styles.emptyStateIcon}>\r\n+            <svg width=\"40\" height=\"40\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n+            </svg>\r\n           </div>\r\n+          <h3 className={styles.emptyStateTitle}>No Categories Available</h3>\r\n+          <p className={styles.emptyStateDescription}>Check back later for our gift categories.</p>\r\n         </div>\r\n       </section>\r\n     );\r\n   }\r\n \r\n   return (\r\n-    <section className=\"py-20 bg-gradient-to-b from-gray-50 to-white\">\r\n-      <div className=\"container-modern\">\r\n+    <section className={styles.modernSection}>\r\n+      <div className={styles.modernContainer}>\r\n         {/* Section Header */}\r\n-        <div className=\"text-center mb-16\">\r\n-          <span className=\"inline-block px-4 py-2 bg-blue-100 text-blue-700 rounded-modern-full text-sm font-medium mb-4\">\r\n+        <div className={styles.sectionHeader}>\r\n+          <span className={styles.sectionBadge}>\r\n             Discover\r\n           </span>\r\n-          <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\r\n+          <h2 className={styles.sectionTitle}>\r\n             Gift Categories\r\n           </h2>\r\n-          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\r\n+          <p className={styles.sectionDescription}>\r\n             Explore our carefully curated collection of gifts for every occasion and person you care about\r\n           </p>\r\n         </div>\r\n \r\n         {/* Categories Grid */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-          {categories.map((category, index) => (\r\n-            <ModernCard\r\n-              key={category._id}\r\n-              className=\"group cursor-pointer transform transition-all duration-300 hover:scale-105\"\r\n-              hover={true}\r\n-              padding=\"none\"\r\n+        <div className={styles.categoriesGrid}>\r\n+          {categories.map((category) => (\r\n+            <Link\r\n+              key={category.id}\r\n+              href={`/shop?category=${category.slug || category.id}`}\r\n+              className={styles.categoryCard}\r\n+              onMouseEnter={() => setActiveCategory(category.id)}\r\n+              onMouseLeave={() => setActiveCategory(null)}\r\n+            >\r\n+              {/* Category Image */}\r\n+              <div className={styles.categoryImageContainer}>\r\n+                {imageErrors[category.id] ? (\r\n+                  <ImageFallback name={category.name} />\r\n+                ) : (\r\n+                  <img\r\n+                    src={category.image}\r\n+                    alt={category.name}\r\n+                    className={styles.categoryImage}\r\n+                    onError={() => handleImageError(category.id)}\r\n+                  />\r\n+                )}\r\n+              </div>\r\n+\r\n+              {/* Category Info */}\r\n+              <div className={styles.categoryContent}>\r\n+                <h3 className={styles.categoryName}>\r\n+                  {category.name}\r\n+                </h3>\r\n+                \r\n+                {category.description && (\r\n+                  <p className={styles.categoryDescription}>\r\n+                    {category.description}\r\n+                  </p>\r\n+                )}\r\n+\r\n+                {/* Stats */}\r\n+                {category.subcategories && category.subcategories.length > 0 && (\r\n+                  <span className={styles.subcategoryCount}>\r\n+                    {category.subcategories.length} subcategories\r\n+                  </span>\r\n+                )}\r\n+              </div>\r\n+            </Link>\r\n+          ))}\r\n+        </div>\r\n+\r\n+        {/* Debug Info (Development Only) */}\r\n+        {process.env.NODE_ENV === 'development' && giftCategoriesMetadata && (\r\n+          <div style={{ marginTop: '64px', padding: '16px', background: '#f8f9fa', borderRadius: '8px', fontSize: '14px', color: '#6c757d' }}>\r\n+            <strong>Debug Info:</strong> Categories loaded from {giftCategoriesMetadata.source || 'static'} • \r\n+            Last updated: {giftCategoriesMetadata.lastUpdated ? new Date(giftCategoriesMetadata.lastUpdated).toLocaleString() : 'Unknown'} • \r\n+            Count: {categories.length}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </section>\r\n+  );\r\n+}\r\n               onMouseEnter={() => setActiveCategory(category._id)}\r\n               onMouseLeave={() => setActiveCategory(null)}\r\n             >\r\n               <Link href={`/shop?category=${category.slug || category._id}`}>\r\n"
                },
                {
                    "date": 1753444721768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n \r\n \"use client\";\r\n \r\n import Link from \"next/link\";\r\n-import Image from \"next/image\";\r\n import { useState, useEffect } from \"react\";\r\n import { giftPageCategories, giftCategoriesMetadata } from \"@/data/giftPageCategories\";\r\n import styles from './ModernGiftCategories.module.css';\r\n \r\n@@ -146,113 +145,4 @@\n       </div>\r\n     </section>\r\n   );\r\n }\r\n-              onMouseEnter={() => setActiveCategory(category._id)}\r\n-              onMouseLeave={() => setActiveCategory(null)}\r\n-            >\r\n-              <Link href={`/shop?category=${category.slug || category._id}`}>\r\n-                <div className=\"relative\">\r\n-                  {/* Category Image */}\r\n-                  <div className=\"relative h-48 overflow-hidden rounded-t-xl\">\r\n-                    {imageErrors[category._id] ? (\r\n-                      <ImageFallback name={category.name} />\r\n-                    ) : (\r\n-                      <Image\r\n-                        src={category.image}\r\n-                        alt={category.name}\r\n-                        fill\r\n-                        className=\"object-cover transition-transform duration-500 group-hover:scale-110\"\r\n-                        onError={() => handleImageError(category._id)}\r\n-                        sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 25vw\"\r\n-                      />\r\n-                    )}\r\n-                    \r\n-                    {/* Overlay */}\r\n-                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n-                    \r\n-                    {/* Hover Content */}\r\n-                    <div className=\"absolute bottom-4 left-4 right-4 text-white opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0\">\r\n-                      {category.subcategories && category.subcategories.length > 0 && (\r\n-                        <div className=\"flex flex-wrap gap-1\">\r\n-                          {category.subcategories.slice(0, 3).map((sub) => (\r\n-                            <span\r\n-                              key={sub._id}\r\n-                              className=\"text-xs px-2 py-1 bg-white/20 backdrop-blur-sm rounded-modern-md\"\r\n-                            >\r\n-                              {sub.name}\r\n-                            </span>\r\n-                          ))}\r\n-                          {category.subcategories.length > 3 && (\r\n-                            <span className=\"text-xs px-2 py-1 bg-white/20 backdrop-blur-sm rounded-modern-md\">\r\n-                              +{category.subcategories.length - 3} more\r\n-                            </span>\r\n-                          )}\r\n-                        </div>\r\n-                      )}\r\n-                    </div>\r\n-                  </div>\r\n-\r\n-                  {/* Category Info */}\r\n-                  <div className=\"p-6\">\r\n-                    <h3 className=\"font-semibold text-lg text-gray-900 mb-2 group-hover:text-blue-600 transition-colors\">\r\n-                      {category.name}\r\n-                    </h3>\r\n-                    \r\n-                    {category.description && (\r\n-                      <p className=\"text-gray-600 text-sm line-clamp-2 mb-3\">\r\n-                        {category.description}\r\n-                      </p>\r\n-                    )}\r\n-\r\n-                    {/* Stats */}\r\n-                    <div className=\"flex items-center justify-between text-sm text-gray-500\">\r\n-                      {category.subcategories && category.subcategories.length > 0 && (\r\n-                        <span className=\"flex items-center gap-1\">\r\n-                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n-                          </svg>\r\n-                          {category.subcategories.length} subcategories\r\n-                        </span>\r\n-                      )}\r\n-                      \r\n-                      <span className=\"flex items-center gap-1 text-blue-600 font-medium group-hover:gap-2 transition-all\">\r\n-                        Explore\r\n-                        <svg className=\"w-4 h-4 transform group-hover:translate-x-1 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n-                        </svg>\r\n-                      </span>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-              </Link>\r\n-            </ModernCard>\r\n-          ))}\r\n-        </div>\r\n-\r\n-        {/* View All Button */}\r\n-        {categories.length > 8 && (\r\n-          <div className=\"text-center mt-12\">\r\n-            <Link\r\n-              href=\"/shop\"\r\n-              className=\"inline-flex items-center gap-2 px-8 py-3 bg-blue-600 text-white rounded-modern-xl font-medium hover:bg-blue-700 transition-colors shadow-modern-lg hover:shadow-modern-xl\"\r\n-            >\r\n-              View All Categories\r\n-              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n-              </svg>\r\n-            </Link>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Debug Info (Development Only) */}\r\n-        {process.env.NODE_ENV === 'development' && giftCategoriesMetadata && (\r\n-          <div className=\"mt-16 p-4 bg-gray-100 rounded-modern-lg text-sm text-gray-600\">\r\n-            <strong>Debug Info:</strong> Categories loaded from {giftCategoriesMetadata.source || 'static'} • \r\n-            Last updated: {giftCategoriesMetadata.lastUpdated ? new Date(giftCategoriesMetadata.lastUpdated).toLocaleString() : 'Unknown'} • \r\n-            Count: {categories.length}\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </section>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1753445034423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,17 +38,16 @@\n   );\r\n \r\n   if (!isClient) {\r\n     return (\r\n-      <section className={styles.skeletonContainer}>\r\n-        <div className={styles.modernContainer}>\r\n-          <div className={styles.skeletonHeader}>\r\n-            <div className={`${styles.skeleton} ${styles.skeletonTitle}`} />\r\n-            <div className={`${styles.skeleton} ${styles.skeletonDescription}`} />\r\n-          </div>\r\n-          <div className={styles.categoriesGrid}>\r\n+      <section className={styles.horizontalCategoriesSection}>\r\n+        <div className={styles.horizontalContainer}>\r\n+          <div className={styles.categoriesNavBar}>\r\n             {[1, 2, 3, 4, 5, 6].map(i => (\r\n-              <div key={i} className={`${styles.skeleton} ${styles.skeletonCard}`} />\r\n+              <div key={i} className={styles.categoryNavItem}>\r\n+                <div className={`${styles.skeleton} ${styles.skeletonCircle}`} />\r\n+                <div className={`${styles.skeleton} ${styles.skeletonLabel}`} />\r\n+              </div>\r\n             ))}\r\n           </div>\r\n         </div>\r\n       </section>\r\n@@ -56,91 +55,59 @@\n   }\r\n \r\n   if (!categories || categories.length === 0) {\r\n     return (\r\n-      <section className={styles.emptyState}>\r\n-        <div className={styles.emptyStateContainer}>\r\n-          <div className={styles.emptyStateIcon}>\r\n-            <svg width=\"40\" height=\"40\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n-            </svg>\r\n+      <section className={styles.horizontalCategoriesSection}>\r\n+        <div className={styles.horizontalContainer}>\r\n+          <div className={styles.emptyState}>\r\n+            <span className={styles.emptyStateText}>No categories available</span>\r\n           </div>\r\n-          <h3 className={styles.emptyStateTitle}>No Categories Available</h3>\r\n-          <p className={styles.emptyStateDescription}>Check back later for our gift categories.</p>\r\n         </div>\r\n       </section>\r\n     );\r\n   }\r\n \r\n   return (\r\n-    <section className={styles.modernSection}>\r\n-      <div className={styles.modernContainer}>\r\n-        {/* Section Header */}\r\n-        <div className={styles.sectionHeader}>\r\n-          <span className={styles.sectionBadge}>\r\n-            Discover\r\n-          </span>\r\n-          <h2 className={styles.sectionTitle}>\r\n-            Gift Categories\r\n-          </h2>\r\n-          <p className={styles.sectionDescription}>\r\n-            Explore our carefully curated collection of gifts for every occasion and person you care about\r\n-          </p>\r\n-        </div>\r\n-\r\n-        {/* Categories Grid */}\r\n-        <div className={styles.categoriesGrid}>\r\n+    <section className={styles.horizontalCategoriesSection}>\r\n+      <div className={styles.horizontalContainer}>\r\n+        {/* Categories Navigation Bar */}\r\n+        <div className={styles.categoriesNavBar}>\r\n           {categories.map((category) => (\r\n             <Link\r\n               key={category.id}\r\n               href={`/shop?category=${category.slug || category.id}`}\r\n-              className={styles.categoryCard}\r\n+              className={`${styles.categoryNavItem} ${activeCategory === category.id ? styles.active : ''}`}\r\n               onMouseEnter={() => setActiveCategory(category.id)}\r\n               onMouseLeave={() => setActiveCategory(null)}\r\n             >\r\n-              {/* Category Image */}\r\n-              <div className={styles.categoryImageContainer}>\r\n+              {/* Category Icon Circle */}\r\n+              <div className={styles.categoryIconCircle}>\r\n                 {imageErrors[category.id] ? (\r\n-                  <ImageFallback name={category.name} />\r\n+                  <div className={styles.iconFallback}>\r\n+                    <span>{category.name?.charAt(0)?.toUpperCase() || '?'}</span>\r\n+                  </div>\r\n                 ) : (\r\n                   <img\r\n                     src={category.image}\r\n                     alt={category.name}\r\n-                    className={styles.categoryImage}\r\n+                    className={styles.categoryIcon}\r\n                     onError={() => handleImageError(category.id)}\r\n                   />\r\n                 )}\r\n               </div>\r\n \r\n-              {/* Category Info */}\r\n-              <div className={styles.categoryContent}>\r\n-                <h3 className={styles.categoryName}>\r\n-                  {category.name}\r\n-                </h3>\r\n-                \r\n-                {category.description && (\r\n-                  <p className={styles.categoryDescription}>\r\n-                    {category.description}\r\n-                  </p>\r\n-                )}\r\n-\r\n-                {/* Stats */}\r\n-                {category.subcategories && category.subcategories.length > 0 && (\r\n-                  <span className={styles.subcategoryCount}>\r\n-                    {category.subcategories.length} subcategories\r\n-                  </span>\r\n-                )}\r\n-              </div>\r\n+              {/* Category Label */}\r\n+              <span className={styles.categoryLabel}>\r\n+                {category.name}\r\n+              </span>\r\n             </Link>\r\n           ))}\r\n         </div>\r\n \r\n         {/* Debug Info (Development Only) */}\r\n         {process.env.NODE_ENV === 'development' && giftCategoriesMetadata && (\r\n-          <div style={{ marginTop: '64px', padding: '16px', background: '#f8f9fa', borderRadius: '8px', fontSize: '14px', color: '#6c757d' }}>\r\n-            <strong>Debug Info:</strong> Categories loaded from {giftCategoriesMetadata.source || 'static'} • \r\n-            Last updated: {giftCategoriesMetadata.lastUpdated ? new Date(giftCategoriesMetadata.lastUpdated).toLocaleString() : 'Unknown'} • \r\n-            Count: {categories.length}\r\n+          <div style={{ marginTop: '32px', padding: '12px', background: '#f8f9fa', borderRadius: '6px', fontSize: '12px', color: '#6c757d', textAlign: 'center' }}>\r\n+            <strong>Debug:</strong> {categories.length} categories loaded • {giftCategoriesMetadata.source || 'static'}\r\n           </div>\r\n         )}\r\n       </div>\r\n     </section>\r\n"
                },
                {
                    "date": 1753445855930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \"use client\";\r\n \r\n import Link from \"next/link\";\r\n import { useState, useEffect } from \"react\";\r\n-import { giftPageCategories, giftCategoriesMetadata } from \"@/data/giftPageCategories\";\r\n+import { giftPageCategories, giftCategoriesMetadata } from \"@/data/giftPageCategoriesData\";\r\n import styles from './ModernGiftCategories.module.css';\r\n \r\n export default function ModernGiftCategories() {\r\n   const [activeCategory, setActiveCategory] = useState(null);\r\n"
                },
                {
                    "date": 1753446432605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /**\r\n  * Modern Gift Categories Component\r\n  * \r\n  * A sleek, minimalistic category display with smooth animations\r\n- * and elegant curved design\r\n+ * and elegant curved design. Now with dynamic data loading.\r\n  */\r\n \r\n \"use client\";\r\n \r\n@@ -13,32 +13,100 @@\n import styles from './ModernGiftCategories.module.css';\r\n \r\n export default function ModernGiftCategories() {\r\n   const [activeCategory, setActiveCategory] = useState(null);\r\n-  const [categories] = useState(giftPageCategories);\r\n+  const [categories, setCategories] = useState([]);\r\n+  const [metadata, setMetadata] = useState(null);\r\n   const [isClient, setIsClient] = useState(false);\r\n+  const [isLoading, setIsLoading] = useState(true);\r\n   const [imageErrors, setImageErrors] = useState({});\r\n+  const [dataSource, setDataSource] = useState('loading'); // 'api', 'static', 'loading', 'error'\r\n \r\n   useEffect(() => {\r\n     setIsClient(true);\r\n+    loadCategoriesData();\r\n   }, []);\r\n \r\n+  const loadCategoriesData = async () => {\r\n+    try {\r\n+      setIsLoading(true);\r\n+      setDataSource('loading');\r\n+\r\n+      // TODO: Replace this URL with your actual API endpoint\r\n+      const API_ENDPOINT = '/api/gift-categories'; // You'll provide this later\r\n+      \r\n+      console.log('🔄 Attempting to fetch categories from API...');\r\n+      \r\n+      // Try to fetch from API first\r\n+      const response = await fetch(API_ENDPOINT, {\r\n+        method: 'GET',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        // Add timeout to prevent hanging\r\n+        signal: AbortSignal.timeout(5000) // 5 second timeout\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(`API responded with status: ${response.status}`);\r\n+      }\r\n+\r\n+      const apiData = await response.json();\r\n+      \r\n+      // Validate the API response structure\r\n+      if (!apiData.categories || !Array.isArray(apiData.categories)) {\r\n+        throw new Error('Invalid API response structure');\r\n+      }\r\n+\r\n+      // Use API data\r\n+      setCategories(apiData.categories);\r\n+      setMetadata(apiData.metadata || {\r\n+        ...giftCategoriesMetadata,\r\n+        source: 'api',\r\n+        lastUpdated: new Date().toISOString()\r\n+      });\r\n+      setDataSource('api');\r\n+      \r\n+      console.log('✅ Successfully loaded categories from API', {\r\n+        count: apiData.categories.length,\r\n+        source: 'api'\r\n+      });\r\n+\r\n+    } catch (error) {\r\n+      console.warn('⚠️ API fetch failed, falling back to static data:', error.message);\r\n+      \r\n+      // Fallback to static data\r\n+      setCategories(giftPageCategories);\r\n+      setMetadata({\r\n+        ...giftCategoriesMetadata,\r\n+        source: 'static_fallback',\r\n+        fallbackReason: error.message\r\n+      });\r\n+      setDataSource('static');\r\n+      \r\n+      console.log('📁 Using static fallback data', {\r\n+        count: giftPageCategories.length,\r\n+        source: 'static_fallback'\r\n+      });\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n   const handleImageError = (categoryId) => {\r\n     setImageErrors(prev => ({\r\n       ...prev,\r\n       [categoryId]: true\r\n     }));\r\n   };\r\n \r\n-  const ImageFallback = ({ name }) => (\r\n-    <div className={styles.imageFallback}>\r\n-      <span>\r\n-        {name?.charAt(0)?.toUpperCase() || '?'}\r\n-      </span>\r\n-    </div>\r\n-  );\r\n+  const handleRetryAPI = () => {\r\n+    console.log('🔄 Retrying API fetch...');\r\n+    loadCategoriesData();\r\n+  };\r\n \r\n-  if (!isClient) {\r\n+  // Loading state\r\n+  if (!isClient || isLoading) {\r\n     return (\r\n       <section className={styles.horizontalCategoriesSection}>\r\n         <div className={styles.horizontalContainer}>\r\n           <div className={styles.categoriesNavBar}>\r\n@@ -48,19 +116,53 @@\n                 <div className={`${styles.skeleton} ${styles.skeletonLabel}`} />\r\n               </div>\r\n             ))}\r\n           </div>\r\n+          \r\n+          {/* Loading indicator */}\r\n+          {process.env.NODE_ENV === 'development' && (\r\n+            <div style={{ \r\n+              marginTop: '16px', \r\n+              padding: '8px 12px', \r\n+              background: '#e3f2fd', \r\n+              borderRadius: '6px', \r\n+              fontSize: '12px', \r\n+              color: '#1565c0', \r\n+              textAlign: 'center',\r\n+              border: '1px solid #bbdefb'\r\n+            }}>\r\n+              🔄 Loading categories...\r\n+            </div>\r\n+          )}\r\n         </div>\r\n       </section>\r\n     );\r\n   }\r\n \r\n+  // Empty state\r\n   if (!categories || categories.length === 0) {\r\n     return (\r\n       <section className={styles.horizontalCategoriesSection}>\r\n         <div className={styles.horizontalContainer}>\r\n           <div className={styles.emptyState}>\r\n             <span className={styles.emptyStateText}>No categories available</span>\r\n+            {dataSource === 'static' && (\r\n+              <button \r\n+                onClick={handleRetryAPI}\r\n+                style={{\r\n+                  marginTop: '12px',\r\n+                  padding: '8px 16px',\r\n+                  background: '#c4986d',\r\n+                  color: 'white',\r\n+                  border: 'none',\r\n+                  borderRadius: '6px',\r\n+                  fontSize: '12px',\r\n+                  cursor: 'pointer'\r\n+                }}\r\n+              >\r\n+                Retry API\r\n+              </button>\r\n+            )}\r\n           </div>\r\n         </div>\r\n       </section>\r\n     );\r\n@@ -103,13 +205,50 @@\n           ))}\r\n         </div>\r\n \r\n         {/* Debug Info (Development Only) */}\r\n-        {process.env.NODE_ENV === 'development' && giftCategoriesMetadata && (\r\n-          <div style={{ marginTop: '32px', padding: '12px', background: '#f8f9fa', borderRadius: '6px', fontSize: '12px', color: '#6c757d', textAlign: 'center' }}>\r\n-            <strong>Debug:</strong> {categories.length} categories loaded • {giftCategoriesMetadata.source || 'static'}\r\n+        {process.env.NODE_ENV === 'development' && metadata && (\r\n+          <div style={{ \r\n+            marginTop: '24px', \r\n+            padding: '12px', \r\n+            background: dataSource === 'api' ? '#e8f5e8' : '#fff3cd', \r\n+            borderRadius: '6px', \r\n+            fontSize: '12px', \r\n+            color: dataSource === 'api' ? '#2e7d32' : '#856404', \r\n+            textAlign: 'center',\r\n+            border: `1px solid ${dataSource === 'api' ? '#c8e6c9' : '#ffeaa7'}`\r\n+          }}>\r\n+            <div>\r\n+              <strong>Source:</strong> {dataSource === 'api' ? '🌐 API' : '📁 Static Fallback'} • \r\n+              <strong> Categories:</strong> {categories.length} • \r\n+              <strong> Updated:</strong> {new Date(metadata.lastUpdated).toLocaleTimeString()}\r\n+            </div>\r\n+            \r\n+            {dataSource === 'static' && metadata.fallbackReason && (\r\n+              <div style={{ marginTop: '4px', fontSize: '11px', opacity: 0.8 }}>\r\n+                <strong>Fallback Reason:</strong> {metadata.fallbackReason}\r\n+              </div>\r\n+            )}\r\n+            \r\n+            {dataSource === 'static' && (\r\n+              <button \r\n+                onClick={handleRetryAPI}\r\n+                style={{\r\n+                  marginTop: '8px',\r\n+                  padding: '4px 8px',\r\n+                  background: '#c4986d',\r\n+                  color: 'white',\r\n+                  border: 'none',\r\n+                  borderRadius: '4px',\r\n+                  fontSize: '11px',\r\n+                  cursor: 'pointer'\r\n+                }}\r\n+              >\r\n+                🔄 Retry API\r\n+              </button>\r\n+            )}\r\n           </div>\r\n         )}\r\n       </div>\r\n     </section>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753449249774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,302 @@\n+/**\r\n+ * Modern Gift Categories Component\r\n+ * \r\n+ * A sleek, minimalistic category display with smooth animations\r\n+ * and elegant curved design. Now with dynamic data loading.\r\n+ */\r\n+\r\n+\"use client\";\r\n+\r\n+import Link from \"next/link\";\r\n+import { useState, useEffect } from \"react\";\r\n+import { giftPageCategories, giftCategoriesMetadata } from \"@/data/giftPageCategoriesData\";\r\n+import styles from './ModernGiftCategories.module.css';\r\n+\r\n+export default function ModernGiftCategories() {\r\n+  const [activeCategory, setActiveCategory] = useState(null);\r\n+  const [categories, setCategories] = useState([]);\r\n+  const [metadata, setMetadata] = useState(null);\r\n+  const [isClient, setIsClient] = useState(false);\r\n+  const [isLoading, setIsLoading] = useState(true);\r\n+  const [imageErrors, setImageErrors] = useState({});\r\n+  const [dataSource, setDataSource] = useState('loading'); // 'api', 'static', 'loading', 'error'\r\n+\r\n+  useEffect(() => {\r\n+    setIsClient(true);\r\n+    loadCategoriesData();\r\n+  }, []);\r\n+\r\n+  const loadCategoriesData = async () => {\r\n+    try {\r\n+      setIsLoading(true);\r\n+      setDataSource('loading');\r\n+\r\n+      // TODO: Replace this URL with your actual API endpoint\r\n+      const API_ENDPOINT = '/api/gift-categories'; // You'll provide this later\r\n+      \r\n+      console.log('🔄 Attempting to fetch categories from API...');\r\n+      \r\n+      // Try to fetch from API first\r\n+      const response = await fetch(API_ENDPOINT, {\r\n+        method: 'GET',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        // Add timeout to prevent hanging\r\n+        signal: AbortSignal.timeout(5000) // 5 second timeout\r\n+      });\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(`API responded with status: ${response.status}`);\r\n+      }\r\n+\r\n+      const apiData = await response.json();\r\n+      \r\n+      // Validate the API response structure\r\n+      if (!apiData.categories || !Array.isArray(apiData.categories)) {\r\n+        throw new Error('Invalid API response structure');\r\n+      }\r\n+\r\n+      // Use API data\r\n+      setCategories(apiData.categories);\r\n+      setMetadata(apiData.metadata || {\r\n+        ...giftCategoriesMetadata,\r\n+        source: 'api',\r\n+        lastUpdated: new Date().toISOString()\r\n+      });\r\n+      setDataSource('api');\r\n+      \r\n+      console.log('✅ Successfully loaded categories from API', {\r\n+        count: apiData.categories.length,\r\n+        source: 'api'\r\n+      });\r\n+\r\n+    } catch (error) {\r\n+      console.warn('⚠️ API fetch failed, falling back to static data:', error.message);\r\n+      \r\n+      // Fallback to static data\r\n+      setCategories(giftPageCategories);\r\n+      setMetadata({\r\n+        ...giftCategoriesMetadata,\r\n+        source: 'static_fallback',\r\n+        fallbackReason: error.message\r\n+      });\r\n+      setDataSource('static');\r\n+      \r\n+      console.log('📁 Using static fallback data', {\r\n+        count: giftPageCategories.length,\r\n+        source: 'static_fallback'\r\n+      });\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleImageError = (categoryId) => {\r\n+    setImageErrors(prev => ({\r\n+      ...prev,\r\n+      [categoryId]: true\r\n+    }));\r\n+  };\r\n+\r\n+  const handleRetryAPI = () => {\r\n+    console.log('🔄 Retrying API fetch...');\r\n+    loadCategoriesData();\r\n+  };\r\n+\r\n+  const handleCategoryHover = (categoryId) => {\r\n+    setActiveCategory(categoryId);\r\n+  };\r\n+\r\n+  const handleCategoryLeave = () => {\r\n+    setActiveCategory(null);\r\n+  };\r\n+\r\n+  // Loading state\r\n+  if (!isClient || isLoading) {\r\n+    return (\r\n+      <section className={styles.horizontalCategoriesSection}>\r\n+        <div className={styles.horizontalContainer}>\r\n+          <div className={styles.categoriesNavBar}>\r\n+            {[1, 2, 3, 4, 5, 6].map(i => (\r\n+              <div key={i} className={styles.categoryNavItem}>\r\n+                <div className={`${styles.skeleton} ${styles.skeletonCircle}`} />\r\n+                <div className={`${styles.skeleton} ${styles.skeletonLabel}`} />\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+          \r\n+          {/* Loading indicator */}\r\n+          {process.env.NODE_ENV === 'development' && (\r\n+            <div style={{ \r\n+              marginTop: '16px', \r\n+              padding: '8px 12px', \r\n+              background: '#e3f2fd', \r\n+              borderRadius: '6px', \r\n+              fontSize: '12px', \r\n+              color: '#1565c0', \r\n+              textAlign: 'center',\r\n+              border: '1px solid #bbdefb'\r\n+            }}>\r\n+              🔄 Loading categories...\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+      </section>\r\n+    );\r\n+  }\r\n+\r\n+  // Empty state\r\n+  if (!categories || categories.length === 0) {\r\n+    return (\r\n+      <section className={styles.horizontalCategoriesSection}>\r\n+        <div className={styles.horizontalContainer}>\r\n+          <div className={styles.emptyState}>\r\n+            <span className={styles.emptyStateText}>No categories available</span>\r\n+            {dataSource === 'static' && (\r\n+              <button \r\n+                onClick={handleRetryAPI}\r\n+                style={{\r\n+                  marginTop: '12px',\r\n+                  padding: '8px 16px',\r\n+                  background: '#c4986d',\r\n+                  color: 'white',\r\n+                  border: 'none',\r\n+                  borderRadius: '6px',\r\n+                  fontSize: '12px',\r\n+                  cursor: 'pointer'\r\n+                }}\r\n+              >\r\n+                Retry API\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+      </section>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <section className={styles.horizontalCategoriesSection}>\r\n+      <div className={styles.horizontalContainer}>\r\n+        {/* Categories Navigation Bar */}\r\n+        <div className={styles.categoriesNavBar}>\r\n+          {categories.map((category) => (\r\n+            <div\r\n+              key={category.id}\r\n+              className={`${styles.categoryNavItem} ${activeCategory === category.id ? styles.active : ''}`}\r\n+              onMouseEnter={() => handleCategoryHover(category.id)}\r\n+              onMouseLeave={handleCategoryLeave}\r\n+            >\r\n+              <Link\r\n+                href={`/shop?category=${category.slug || category.id}`}\r\n+                className={styles.categoryLink}\r\n+              >\r\n+                {/* Category Icon Circle */}\r\n+                <div className={styles.categoryIconCircle}>\r\n+                  {imageErrors[category.id] ? (\r\n+                    <div className={styles.iconFallback}>\r\n+                      <span>{category.name?.charAt(0)?.toUpperCase() || '?'}</span>\r\n+                    </div>\r\n+                  ) : (\r\n+                    <img\r\n+                      src={category.image}\r\n+                      alt={category.name}\r\n+                      className={styles.categoryIcon}\r\n+                      onError={() => handleImageError(category.id)}\r\n+                    />\r\n+                  )}\r\n+                </div>\r\n+\r\n+                {/* Category Label */}\r\n+                <span className={styles.categoryLabel}>\r\n+                  {category.name}\r\n+                </span>\r\n+              </Link>\r\n+\r\n+              {/* Subcategories Dropdown */}\r\n+              {activeCategory === category.id && category.subcategories && category.subcategories.length > 0 && (\r\n+                <div className={styles.subcategoriesDropdown}>\r\n+                  <div className={styles.subcategoriesContent}>\r\n+                    <div className={styles.subcategoriesHeader}>\r\n+                      <h4 className={styles.subcategoriesTitle}>{category.name}</h4>\r\n+                      <p className={styles.subcategoriesDescription}>\r\n+                        {category.description || `Explore all ${category.name.toLowerCase()} products`}\r\n+                      </p>\r\n+                    </div>\r\n+                    \r\n+                    <div className={styles.subcategoriesList}>\r\n+                      {category.subcategories.map((subcategory) => (\r\n+                        <Link\r\n+                          key={subcategory.id}\r\n+                          href={subcategory.link}\r\n+                          className={styles.subcategoryItem}\r\n+                        >\r\n+                          <span className={styles.subcategoryName}>{subcategory.name}</span>\r\n+                          <span className={styles.subcategoryArrow}>→</span>\r\n+                        </Link>\r\n+                      ))}\r\n+                    </div>\r\n+\r\n+                    <div className={styles.subcategoriesFooter}>\r\n+                      <Link\r\n+                        href={`/shop?category=${category.slug || category.id}`}\r\n+                        className={styles.viewAllLink}\r\n+                      >\r\n+                        View All {category.name} →\r\n+                      </Link>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          ))}\r\n+        </div>\r\n+\r\n+        {/* Debug Info (Development Only) */}\r\n+        {process.env.NODE_ENV === 'development' && metadata && (\r\n+          <div style={{ \r\n+            marginTop: '24px', \r\n+            padding: '12px', \r\n+            background: dataSource === 'api' ? '#e8f5e8' : '#fff3cd', \r\n+            borderRadius: '6px', \r\n+            fontSize: '12px', \r\n+            color: dataSource === 'api' ? '#2e7d32' : '#856404', \r\n+            textAlign: 'center',\r\n+            border: `1px solid ${dataSource === 'api' ? '#c8e6c9' : '#ffeaa7'}`\r\n+          }}>\r\n+            <div>\r\n+              <strong>Source:</strong> {dataSource === 'api' ? '🌐 API' : '📁 Static Fallback'} • \r\n+              <strong> Categories:</strong> {categories.length} • \r\n+              <strong> Updated:</strong> {new Date(metadata.lastUpdated).toLocaleTimeString()}\r\n+            </div>\r\n+            \r\n+            {dataSource === 'static' && metadata.fallbackReason && (\r\n+              <div style={{ marginTop: '4px', fontSize: '11px', opacity: 0.8 }}>\r\n+                <strong>Fallback Reason:</strong> {metadata.fallbackReason}\r\n+              </div>\r\n+            )}\r\n+            \r\n+            {dataSource === 'static' && (\r\n+              <button \r\n+                onClick={handleRetryAPI}\r\n+                style={{\r\n+                  marginTop: '8px',\r\n+                  padding: '4px 8px',\r\n+                  background: '#c4986d',\r\n+                  color: 'white',\r\n+                  border: 'none',\r\n+                  borderRadius: '4px',\r\n+                  fontSize: '11px',\r\n+                  cursor: 'pointer'\r\n+                }}\r\n+              >\r\n+                🔄 Retry API\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </section>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753449415511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,305 +252,10 @@\n             </div>\r\n           ))}\r\n         </div>\r\n \r\n-        {/* Debug Info (Development Only) */}\r\n-        {process.env.NODE_ENV === 'development' && metadata && (\r\n-          <div style={{ \r\n-            marginTop: '24px', \r\n-            padding: '12px', \r\n-            background: dataSource === 'api' ? '#e8f5e8' : '#fff3cd', \r\n-            borderRadius: '6px', \r\n-            fontSize: '12px', \r\n-            color: dataSource === 'api' ? '#2e7d32' : '#856404', \r\n-            textAlign: 'center',\r\n-            border: `1px solid ${dataSource === 'api' ? '#c8e6c9' : '#ffeaa7'}`\r\n-          }}>\r\n-            <div>\r\n-              <strong>Source:</strong> {dataSource === 'api' ? '🌐 API' : '📁 Static Fallback'} • \r\n-              <strong> Categories:</strong> {categories.length} • \r\n-              <strong> Updated:</strong> {new Date(metadata.lastUpdated).toLocaleTimeString()}\r\n-            </div>\r\n-            \r\n-            {dataSource === 'static' && metadata.fallbackReason && (\r\n-              <div style={{ marginTop: '4px', fontSize: '11px', opacity: 0.8 }}>\r\n-                <strong>Fallback Reason:</strong> {metadata.fallbackReason}\r\n-              </div>\r\n-            )}\r\n-            \r\n-            {dataSource === 'static' && (\r\n-              <button \r\n-                onClick={handleRetryAPI}\r\n-                style={{\r\n-                  marginTop: '8px',\r\n-                  padding: '4px 8px',\r\n-                  background: '#c4986d',\r\n-                  color: 'white',\r\n-                  border: 'none',\r\n-                  borderRadius: '4px',\r\n-                  fontSize: '11px',\r\n-                  cursor: 'pointer'\r\n-                }}\r\n-              >\r\n-                🔄 Retry API\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </section>\r\n-  );\r\n-}\n-/**\r\n- * Modern Gift Categories Component\r\n- * \r\n- * A sleek, minimalistic category display with smooth animations\r\n- * and elegant curved design. Now with dynamic data loading.\r\n- */\r\n \r\n-\"use client\";\r\n-\r\n-import Link from \"next/link\";\r\n-import { useState, useEffect } from \"react\";\r\n-import { giftPageCategories, giftCategoriesMetadata } from \"@/data/giftPageCategoriesData\";\r\n-import styles from './ModernGiftCategories.module.css';\r\n-\r\n-export default function ModernGiftCategories() {\r\n-  const [activeCategory, setActiveCategory] = useState(null);\r\n-  const [categories, setCategories] = useState([]);\r\n-  const [metadata, setMetadata] = useState(null);\r\n-  const [isClient, setIsClient] = useState(false);\r\n-  const [isLoading, setIsLoading] = useState(true);\r\n-  const [imageErrors, setImageErrors] = useState({});\r\n-  const [dataSource, setDataSource] = useState('loading'); // 'api', 'static', 'loading', 'error'\r\n-\r\n-  useEffect(() => {\r\n-    setIsClient(true);\r\n-    loadCategoriesData();\r\n-  }, []);\r\n-\r\n-  const loadCategoriesData = async () => {\r\n-    try {\r\n-      setIsLoading(true);\r\n-      setDataSource('loading');\r\n-\r\n-      // TODO: Replace this URL with your actual API endpoint\r\n-      const API_ENDPOINT = '/api/gift-categories'; // You'll provide this later\r\n-      \r\n-      console.log('🔄 Attempting to fetch categories from API...');\r\n-      \r\n-      // Try to fetch from API first\r\n-      const response = await fetch(API_ENDPOINT, {\r\n-        method: 'GET',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        // Add timeout to prevent hanging\r\n-        signal: AbortSignal.timeout(5000) // 5 second timeout\r\n-      });\r\n-\r\n-      if (!response.ok) {\r\n-        throw new Error(`API responded with status: ${response.status}`);\r\n-      }\r\n-\r\n-      const apiData = await response.json();\r\n-      \r\n-      // Validate the API response structure\r\n-      if (!apiData.categories || !Array.isArray(apiData.categories)) {\r\n-        throw new Error('Invalid API response structure');\r\n-      }\r\n-\r\n-      // Use API data\r\n-      setCategories(apiData.categories);\r\n-      setMetadata(apiData.metadata || {\r\n-        ...giftCategoriesMetadata,\r\n-        source: 'api',\r\n-        lastUpdated: new Date().toISOString()\r\n-      });\r\n-      setDataSource('api');\r\n-      \r\n-      console.log('✅ Successfully loaded categories from API', {\r\n-        count: apiData.categories.length,\r\n-        source: 'api'\r\n-      });\r\n-\r\n-    } catch (error) {\r\n-      console.warn('⚠️ API fetch failed, falling back to static data:', error.message);\r\n-      \r\n-      // Fallback to static data\r\n-      setCategories(giftPageCategories);\r\n-      setMetadata({\r\n-        ...giftCategoriesMetadata,\r\n-        source: 'static_fallback',\r\n-        fallbackReason: error.message\r\n-      });\r\n-      setDataSource('static');\r\n-      \r\n-      console.log('📁 Using static fallback data', {\r\n-        count: giftPageCategories.length,\r\n-        source: 'static_fallback'\r\n-      });\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleImageError = (categoryId) => {\r\n-    setImageErrors(prev => ({\r\n-      ...prev,\r\n-      [categoryId]: true\r\n-    }));\r\n-  };\r\n-\r\n-  const handleRetryAPI = () => {\r\n-    console.log('🔄 Retrying API fetch...');\r\n-    loadCategoriesData();\r\n-  };\r\n-\r\n-  // Loading state\r\n-  if (!isClient || isLoading) {\r\n-    return (\r\n-      <section className={styles.horizontalCategoriesSection}>\r\n-        <div className={styles.horizontalContainer}>\r\n-          <div className={styles.categoriesNavBar}>\r\n-            {[1, 2, 3, 4, 5, 6].map(i => (\r\n-              <div key={i} className={styles.categoryNavItem}>\r\n-                <div className={`${styles.skeleton} ${styles.skeletonCircle}`} />\r\n-                <div className={`${styles.skeleton} ${styles.skeletonLabel}`} />\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-          \r\n-          {/* Loading indicator */}\r\n-          {process.env.NODE_ENV === 'development' && (\r\n-            <div style={{ \r\n-              marginTop: '16px', \r\n-              padding: '8px 12px', \r\n-              background: '#e3f2fd', \r\n-              borderRadius: '6px', \r\n-              fontSize: '12px', \r\n-              color: '#1565c0', \r\n-              textAlign: 'center',\r\n-              border: '1px solid #bbdefb'\r\n-            }}>\r\n-              🔄 Loading categories...\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      </section>\r\n-    );\r\n-  }\r\n-\r\n-  // Empty state\r\n-  if (!categories || categories.length === 0) {\r\n-    return (\r\n-      <section className={styles.horizontalCategoriesSection}>\r\n-        <div className={styles.horizontalContainer}>\r\n-          <div className={styles.emptyState}>\r\n-            <span className={styles.emptyStateText}>No categories available</span>\r\n-            {dataSource === 'static' && (\r\n-              <button \r\n-                onClick={handleRetryAPI}\r\n-                style={{\r\n-                  marginTop: '12px',\r\n-                  padding: '8px 16px',\r\n-                  background: '#c4986d',\r\n-                  color: 'white',\r\n-                  border: 'none',\r\n-                  borderRadius: '6px',\r\n-                  fontSize: '12px',\r\n-                  cursor: 'pointer'\r\n-                }}\r\n-              >\r\n-                Retry API\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        </div>\r\n-      </section>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <section className={styles.horizontalCategoriesSection}>\r\n-      <div className={styles.horizontalContainer}>\r\n-        {/* Categories Navigation Bar */}\r\n-        <div className={styles.categoriesNavBar}>\r\n-          {categories.map((category) => (\r\n-            <Link\r\n-              key={category.id}\r\n-              href={`/shop?category=${category.slug || category.id}`}\r\n-              className={`${styles.categoryNavItem} ${activeCategory === category.id ? styles.active : ''}`}\r\n-              onMouseEnter={() => setActiveCategory(category.id)}\r\n-              onMouseLeave={() => setActiveCategory(null)}\r\n-            >\r\n-              {/* Category Icon Circle */}\r\n-              <div className={styles.categoryIconCircle}>\r\n-                {imageErrors[category.id] ? (\r\n-                  <div className={styles.iconFallback}>\r\n-                    <span>{category.name?.charAt(0)?.toUpperCase() || '?'}</span>\r\n-                  </div>\r\n-                ) : (\r\n-                  <img\r\n-                    src={category.image}\r\n-                    alt={category.name}\r\n-                    className={styles.categoryIcon}\r\n-                    onError={() => handleImageError(category.id)}\r\n-                  />\r\n-                )}\r\n-              </div>\r\n-\r\n-              {/* Category Label */}\r\n-              <span className={styles.categoryLabel}>\r\n-                {category.name}\r\n-              </span>\r\n-            </Link>\r\n-          ))}\r\n-        </div>\r\n-\r\n-        {/* Debug Info (Development Only) */}\r\n-        {process.env.NODE_ENV === 'development' && metadata && (\r\n-          <div style={{ \r\n-            marginTop: '24px', \r\n-            padding: '12px', \r\n-            background: dataSource === 'api' ? '#e8f5e8' : '#fff3cd', \r\n-            borderRadius: '6px', \r\n-            fontSize: '12px', \r\n-            color: dataSource === 'api' ? '#2e7d32' : '#856404', \r\n-            textAlign: 'center',\r\n-            border: `1px solid ${dataSource === 'api' ? '#c8e6c9' : '#ffeaa7'}`\r\n-          }}>\r\n-            <div>\r\n-              <strong>Source:</strong> {dataSource === 'api' ? '🌐 API' : '📁 Static Fallback'} • \r\n-              <strong> Categories:</strong> {categories.length} • \r\n-              <strong> Updated:</strong> {new Date(metadata.lastUpdated).toLocaleTimeString()}\r\n-            </div>\r\n-            \r\n-            {dataSource === 'static' && metadata.fallbackReason && (\r\n-              <div style={{ marginTop: '4px', fontSize: '11px', opacity: 0.8 }}>\r\n-                <strong>Fallback Reason:</strong> {metadata.fallbackReason}\r\n-              </div>\r\n-            )}\r\n-            \r\n-            {dataSource === 'static' && (\r\n-              <button \r\n-                onClick={handleRetryAPI}\r\n-                style={{\r\n-                  marginTop: '8px',\r\n-                  padding: '4px 8px',\r\n-                  background: '#c4986d',\r\n-                  color: 'white',\r\n-                  border: 'none',\r\n-                  borderRadius: '4px',\r\n-                  fontSize: '11px',\r\n-                  cursor: 'pointer'\r\n-                }}\r\n-              >\r\n-                🔄 Retry API\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n+        \r\n       </div>\r\n     </section>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753455366994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,4 @@\n-/**\r\n- * Modern Gift Categories Component\r\n- * \r\n- * A sleek, minimalistic category display with smooth animations\r\n- * and elegant curved design. Now with dynamic data loading.\r\n- */\r\n-\r\n \"use client\";\r\n \r\n import Link from \"next/link\";\r\n import { useState, useEffect } from \"react\";\r\n@@ -251,11 +244,8 @@\n               )}\r\n             </div>\r\n           ))}\r\n         </div>\r\n-\r\n-\r\n-        \r\n       </div>\r\n     </section>\r\n   );\r\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1753441696954,
            "name": "Commit-0",
            "content": "/**\r\n * Modern Gift Categories Component\r\n * \r\n * A sleek, minimalistic category display with smooth animations\r\n * and elegant curved design\r\n */\r\n\r\n\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { giftPageCategories, giftCategoriesMetadata } from \"@/data/giftPageCategories\";\r\nimport { ModernCard, ModernLoadingOverlay, ModernSkeleton } from \"@/components/ui\";\r\n\r\nexport default function ModernGiftCategories() {\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n  const [categories] = useState(giftPageCategories);\r\n  const [isClient, setIsClient] = useState(false);\r\n  const [imageErrors, setImageErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n  }, []);\r\n\r\n  const handleImageError = (categoryId) => {\r\n    setImageErrors(prev => ({\r\n      ...prev,\r\n      [categoryId]: true\r\n    }));\r\n  };\r\n\r\n  const ImageFallback = ({ name }) => (\r\n    <div className=\"w-full h-48 bg-gradient-to-br from-blue-500 to-blue-600 flex items-center justify-center rounded-modern-xl\">\r\n      <span className=\"text-white text-3xl font-bold\">\r\n        {name?.charAt(0)?.toUpperCase() || '?'}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  if (!isClient) {\r\n    return (\r\n      <section className=\"py-20 bg-gradient-to-b from-gray-50 to-white\">\r\n        <div className=\"container-modern\">\r\n          <div className=\"text-center mb-16\">\r\n            <ModernSkeleton height=\"h-8\" width=\"w-64\" className=\"mx-auto mb-4\" />\r\n            <ModernSkeleton height=\"h-4\" width=\"w-96\" className=\"mx-auto\" />\r\n          </div>\r\n          <div className=\"grid-modern grid-modern--3 lg:grid-cols-4\">\r\n            {[1, 2, 3, 4, 5, 6].map(i => (\r\n              <ModernSkeleton key={i} height=\"h-80\" rounded=\"rounded-modern-2xl\" />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (!categories || categories.length === 0) {\r\n    return (\r\n      <section className=\"py-20 bg-gradient-to-b from-gray-50 to-white\">\r\n        <div className=\"container-modern text-center\">\r\n          <div className=\"max-w-md mx-auto\">\r\n            <div className=\"w-20 h-20 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center\">\r\n              <svg className=\"w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n              </svg>\r\n            </div>\r\n            <h3 className=\"text-xl font-semibold text-gray-700 mb-2\">No Categories Available</h3>\r\n            <p className=\"text-gray-500\">Check back later for our gift categories.</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"py-20 bg-gradient-to-b from-gray-50 to-white\">\r\n      <div className=\"container-modern\">\r\n        {/* Section Header */}\r\n        <div className=\"text-center mb-16\">\r\n          <span className=\"inline-block px-4 py-2 bg-blue-100 text-blue-700 rounded-modern-full text-sm font-medium mb-4\">\r\n            Discover\r\n          </span>\r\n          <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\r\n            Gift Categories\r\n          </h2>\r\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\r\n            Explore our carefully curated collection of gifts for every occasion and person you care about\r\n          </p>\r\n        </div>\r\n\r\n        {/* Categories Grid */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n          {categories.map((category, index) => (\r\n            <ModernCard\r\n              key={category._id}\r\n              className=\"group cursor-pointer transform transition-all duration-300 hover:scale-105\"\r\n              hover={true}\r\n              padding=\"none\"\r\n              onMouseEnter={() => setActiveCategory(category._id)}\r\n              onMouseLeave={() => setActiveCategory(null)}\r\n            >\r\n              <Link href={`/shop?category=${category.slug || category._id}`}>\r\n                <div className=\"relative\">\r\n                  {/* Category Image */}\r\n                  <div className=\"relative h-48 overflow-hidden rounded-t-xl\">\r\n                    {imageErrors[category._id] ? (\r\n                      <ImageFallback name={category.name} />\r\n                    ) : (\r\n                      <Image\r\n                        src={category.image}\r\n                        alt={category.name}\r\n                        fill\r\n                        className=\"object-cover transition-transform duration-500 group-hover:scale-110\"\r\n                        onError={() => handleImageError(category._id)}\r\n                        sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 25vw\"\r\n                      />\r\n                    )}\r\n                    \r\n                    {/* Overlay */}\r\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n                    \r\n                    {/* Hover Content */}\r\n                    <div className=\"absolute bottom-4 left-4 right-4 text-white opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0\">\r\n                      {category.subcategories && category.subcategories.length > 0 && (\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {category.subcategories.slice(0, 3).map((sub) => (\r\n                            <span\r\n                              key={sub._id}\r\n                              className=\"text-xs px-2 py-1 bg-white/20 backdrop-blur-sm rounded-modern-md\"\r\n                            >\r\n                              {sub.name}\r\n                            </span>\r\n                          ))}\r\n                          {category.subcategories.length > 3 && (\r\n                            <span className=\"text-xs px-2 py-1 bg-white/20 backdrop-blur-sm rounded-modern-md\">\r\n                              +{category.subcategories.length - 3} more\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Category Info */}\r\n                  <div className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-lg text-gray-900 mb-2 group-hover:text-blue-600 transition-colors\">\r\n                      {category.name}\r\n                    </h3>\r\n                    \r\n                    {category.description && (\r\n                      <p className=\"text-gray-600 text-sm line-clamp-2 mb-3\">\r\n                        {category.description}\r\n                      </p>\r\n                    )}\r\n\r\n                    {/* Stats */}\r\n                    <div className=\"flex items-center justify-between text-sm text-gray-500\">\r\n                      {category.subcategories && category.subcategories.length > 0 && (\r\n                        <span className=\"flex items-center gap-1\">\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n                          </svg>\r\n                          {category.subcategories.length} subcategories\r\n                        </span>\r\n                      )}\r\n                      \r\n                      <span className=\"flex items-center gap-1 text-blue-600 font-medium group-hover:gap-2 transition-all\">\r\n                        Explore\r\n                        <svg className=\"w-4 h-4 transform group-hover:translate-x-1 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                        </svg>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </ModernCard>\r\n          ))}\r\n        </div>\r\n\r\n        {/* View All Button */}\r\n        {categories.length > 8 && (\r\n          <div className=\"text-center mt-12\">\r\n            <Link\r\n              href=\"/shop\"\r\n              className=\"inline-flex items-center gap-2 px-8 py-3 bg-blue-600 text-white rounded-modern-xl font-medium hover:bg-blue-700 transition-colors shadow-modern-lg hover:shadow-modern-xl\"\r\n            >\r\n              View All Categories\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n              </svg>\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {/* Debug Info (Development Only) */}\r\n        {process.env.NODE_ENV === 'development' && giftCategoriesMetadata && (\r\n          <div className=\"mt-16 p-4 bg-gray-100 rounded-modern-lg text-sm text-gray-600\">\r\n            <strong>Debug Info:</strong> Categories loaded from {giftCategoriesMetadata.source || 'static'} • \r\n            Last updated: {giftCategoriesMetadata.lastUpdated ? new Date(giftCategoriesMetadata.lastUpdated).toLocaleString() : 'Unknown'} • \r\n            Count: {categories.length}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"
        }
    ]
}