{
    "sourceFile": "Ninico/components/sections/ModernGiftCategories_New.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753444479430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753444479430,
            "name": "Commit-0",
            "content": "/**\r\n * Modern Gift Categories Component\r\n * \r\n * A sleek, minimalistic category display with smooth animations\r\n * and elegant curved design\r\n */\r\n\r\n\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { giftPageCategories, giftCategoriesMetadata } from \"@/data/giftPageCategories\";\r\nimport styles from './ModernGiftCategories.module.css';\r\n\r\nexport default function ModernGiftCategories() {\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n  const [categories] = useState(giftPageCategories);\r\n  const [isClient, setIsClient] = useState(false);\r\n  const [imageErrors, setImageErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n  }, []);\r\n\r\n  const handleImageError = (categoryId) => {\r\n    setImageErrors(prev => ({\r\n      ...prev,\r\n      [categoryId]: true\r\n    }));\r\n  };\r\n\r\n  const ImageFallback = ({ name }) => (\r\n    <div className={styles.imageFallback}>\r\n      <span>\r\n        {name?.charAt(0)?.toUpperCase() || '?'}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  if (!isClient) {\r\n    return (\r\n      <section className={styles.skeletonContainer}>\r\n        <div className={styles.modernContainer}>\r\n          <div className={styles.skeletonHeader}>\r\n            <div className={`${styles.skeleton} ${styles.skeletonTitle}`} />\r\n            <div className={`${styles.skeleton} ${styles.skeletonDescription}`} />\r\n          </div>\r\n          <div className={styles.categoriesGrid}>\r\n            {[1, 2, 3, 4, 5, 6].map(i => (\r\n              <div key={i} className={`${styles.skeleton} ${styles.skeletonCard}`} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (!categories || categories.length === 0) {\r\n    return (\r\n      <section className={styles.emptyState}>\r\n        <div className={styles.emptyStateContainer}>\r\n          <div className={styles.emptyStateIcon}>\r\n            <svg width=\"40\" height=\"40\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className={styles.emptyStateTitle}>No Categories Available</h3>\r\n          <p className={styles.emptyStateDescription}>Check back later for our gift categories.</p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className={styles.modernSection}>\r\n      <div className={styles.modernContainer}>\r\n        {/* Section Header */}\r\n        <div className={styles.sectionHeader}>\r\n          <span className={styles.sectionBadge}>\r\n            Discover\r\n          </span>\r\n          <h2 className={styles.sectionTitle}>\r\n            Gift Categories\r\n          </h2>\r\n          <p className={styles.sectionDescription}>\r\n            Explore our carefully curated collection of gifts for every occasion and person you care about\r\n          </p>\r\n        </div>\r\n\r\n        {/* Categories Grid */}\r\n        <div className={styles.categoriesGrid}>\r\n          {categories.map((category) => (\r\n            <Link\r\n              key={category.id}\r\n              href={`/shop?category=${category.slug || category.id}`}\r\n              className={styles.categoryCard}\r\n              onMouseEnter={() => setActiveCategory(category.id)}\r\n              onMouseLeave={() => setActiveCategory(null)}\r\n            >\r\n              {/* Category Image */}\r\n              <div className={styles.categoryImageContainer}>\r\n                {imageErrors[category.id] ? (\r\n                  <ImageFallback name={category.name} />\r\n                ) : (\r\n                  <img\r\n                    src={category.image}\r\n                    alt={category.name}\r\n                    className={styles.categoryImage}\r\n                    onError={() => handleImageError(category.id)}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              {/* Category Info */}\r\n              <div className={styles.categoryContent}>\r\n                <h3 className={styles.categoryName}>\r\n                  {category.name}\r\n                </h3>\r\n                \r\n                {category.description && (\r\n                  <p className={styles.categoryDescription}>\r\n                    {category.description}\r\n                  </p>\r\n                )}\r\n\r\n                {/* Stats */}\r\n                {category.subcategories && category.subcategories.length > 0 && (\r\n                  <span className={styles.subcategoryCount}>\r\n                    {category.subcategories.length} subcategories\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Debug Info (Development Only) */}\r\n        {process.env.NODE_ENV === 'development' && giftCategoriesMetadata && (\r\n          <div style={{ marginTop: '64px', padding: '16px', background: '#f8f9fa', borderRadius: '8px', fontSize: '14px', color: '#6c757d' }}>\r\n            <strong>Debug Info:</strong> Categories loaded from {giftCategoriesMetadata.source || 'static'} • \r\n            Last updated: {giftCategoriesMetadata.lastUpdated ? new Date(giftCategoriesMetadata.lastUpdated).toLocaleString() : 'Unknown'} • \r\n            Count: {categories.length}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"
        }
    ]
}