{
    "sourceFile": "Ninico/components/auth/ProtectedRoute.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753609730768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753609730768,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport React from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useEffect } from 'react';\r\n\r\n// Loading component\r\nconst LoadingSpinner = () => (\r\n  <div className=\"min-h-screen flex items-center justify-center\">\r\n    <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-500\"></div>\r\n  </div>\r\n);\r\n\r\n// Access denied component\r\nconst AccessDenied = ({ message, requiredRole, currentRole }) => (\r\n  <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n    <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-8 text-center\">\r\n      <div className=\"mb-6\">\r\n        <svg className=\"mx-auto h-12 w-12 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n        </svg>\r\n      </div>\r\n      <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Access Denied</h3>\r\n      <p className=\"text-sm text-gray-500 mb-4\">\r\n        {message || 'You do not have permission to access this resource.'}\r\n      </p>\r\n      {requiredRole && currentRole && (\r\n        <div className=\"text-xs text-gray-400 mb-4\">\r\n          <p>Required: {Array.isArray(requiredRole) ? requiredRole.join(', ') : requiredRole}</p>\r\n          <p>Current: {currentRole || 'none'}</p>\r\n        </div>\r\n      )}\r\n      <button\r\n        onClick={() => window.history.back()}\r\n        className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n      >\r\n        Go Back\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// Login required component\r\nconst LoginRequired = () => {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n      <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-8 text-center\">\r\n        <div className=\"mb-6\">\r\n          <svg className=\"mx-auto h-12 w-12 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\r\n          </svg>\r\n        </div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Login Required</h3>\r\n        <p className=\"text-sm text-gray-500 mb-6\">\r\n          You need to be logged in to access this page.\r\n        </p>\r\n        <div className=\"space-y-3\">\r\n          <button\r\n            onClick={() => router.push('/sign-in')}\r\n            className=\"w-full inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n          >\r\n            Sign In\r\n          </button>\r\n          <button\r\n            onClick={() => window.history.back()}\r\n            className=\"w-full inline-flex items-center justify-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n          >\r\n            Go Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main ProtectedRoute component\r\nconst ProtectedRoute = ({ \r\n  children, \r\n  requireAuth = true, \r\n  requiredRoles = [], \r\n  requiredPermissions = [],\r\n  fallback = null,\r\n  redirectTo = null\r\n}) => {\r\n  const { \r\n    isAuthenticated, \r\n    isLoading, \r\n    user, \r\n    hasRole, \r\n    hasPermission,\r\n    role,\r\n    userType \r\n  } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Handle redirect after auth check\r\n    if (!isLoading && redirectTo) {\r\n      if (!isAuthenticated && requireAuth) {\r\n        router.push('/sign-in');\r\n      } else if (isAuthenticated && !checkAccess()) {\r\n        router.push('/');\r\n      }\r\n    }\r\n  }, [isLoading, isAuthenticated, redirectTo]);\r\n\r\n  // Check if user has required access\r\n  const checkAccess = () => {\r\n    // Check roles\r\n    if (requiredRoles.length > 0) {\r\n      const hasRequiredRole = requiredRoles.some(role => hasRole(role));\r\n      if (!hasRequiredRole) return false;\r\n    }\r\n\r\n    // Check permissions\r\n    if (requiredPermissions.length > 0) {\r\n      const hasRequiredPermission = requiredPermissions.some(permission => hasPermission(permission));\r\n      if (!hasRequiredPermission) return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  // Show loading spinner while checking auth\r\n  if (isLoading) {\r\n    return fallback || <LoadingSpinner />;\r\n  }\r\n\r\n  // Show login required if auth is needed but user is not authenticated\r\n  if (requireAuth && !isAuthenticated) {\r\n    if (redirectTo) return null; // Let useEffect handle redirect\r\n    return <LoginRequired />;\r\n  }\r\n\r\n  // Check access permissions\r\n  if (isAuthenticated && !checkAccess()) {\r\n    if (redirectTo) return null; // Let useEffect handle redirect\r\n    return (\r\n      <AccessDenied \r\n        message=\"You do not have the required permissions to access this resource.\"\r\n        requiredRole={requiredRoles}\r\n        currentRole={role}\r\n      />\r\n    );\r\n  }\r\n\r\n  // User has access, render children\r\n  return children;\r\n};\r\n\r\n// Specific role-based components for convenience\r\nexport const AdminRoute = ({ children, ...props }) => (\r\n  <ProtectedRoute \r\n    requiredRoles={['admin', 'superadmin']} \r\n    {...props}\r\n  >\r\n    {children}\r\n  </ProtectedRoute>\r\n);\r\n\r\nexport const CorporateRoute = ({ children, ...props }) => (\r\n  <ProtectedRoute \r\n    requiredRoles={['corporate', 'admin', 'superadmin']} \r\n    {...props}\r\n  >\r\n    {children}\r\n  </ProtectedRoute>\r\n);\r\n\r\nexport const UserRoute = ({ children, ...props }) => (\r\n  <ProtectedRoute \r\n    requireAuth={true} \r\n    {...props}\r\n  >\r\n    {children}\r\n  </ProtectedRoute>\r\n);\r\n\r\n// Permission-based route\r\nexport const PermissionRoute = ({ permission, children, ...props }) => (\r\n  <ProtectedRoute \r\n    requiredPermissions={[permission]} \r\n    {...props}\r\n  >\r\n    {children}\r\n  </ProtectedRoute>\r\n);\r\n\r\nexport default ProtectedRoute;\r\n"
        }
    ]
}