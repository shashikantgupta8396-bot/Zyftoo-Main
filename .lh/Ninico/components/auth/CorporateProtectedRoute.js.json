{
    "sourceFile": "Ninico/components/auth/CorporateProtectedRoute.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1753614542818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753636887696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,34 +8,44 @@\n import { useRouter } from 'next/navigation'\r\n import AuthContext from '@/components/context/AuthContext'\r\n \r\n export default function CorporateProtectedRoute({ children }) {\r\n-    const { user, loading } = useContext(AuthContext)\r\n+    const { user, isAuthenticated, isLoading } = useContext(AuthContext)\r\n     const router = useRouter()\r\n \r\n     useEffect(() => {\r\n-        // Wait for auth context to load\r\n-        if (loading) return\r\n+        console.log('üîí [CorporateProtectedRoute] Auth check:', {\r\n+            isLoading,\r\n+            isAuthenticated,\r\n+            userType: user?.userType,\r\n+            userName: user?.name\r\n+        })\r\n+        \r\n+        // Wait for auth context to finish loading\r\n+        if (isLoading) {\r\n+            console.log('‚è≥ [CorporateProtectedRoute] Still loading...')\r\n+            return\r\n+        }\r\n \r\n-        // If no user is logged in, redirect to corporate sign-in\r\n-        if (!user) {\r\n-            console.log('üö´ No user authenticated, redirecting to corporate sign-in')\r\n+        // If no user is authenticated, redirect to corporate sign-in\r\n+        if (!isAuthenticated || !user) {\r\n+            console.log('üö´ [CorporateProtectedRoute] No user authenticated, redirecting to corporate sign-in')\r\n             router.push('/corporate/sign-in')\r\n             return\r\n         }\r\n \r\n-        // If user is not a corporate user, redirect to appropriate page\r\n+        // If user is not a corporate user, redirect to corporate sign-in\r\n         if (user.userType !== 'Corporate') {\r\n-            console.log('üö´ User is not a corporate user, redirecting to home')\r\n-            router.push('/')\r\n+            console.log('üö´ [CorporateProtectedRoute] User is not corporate type, redirecting to corporate sign-in')\r\n+            router.push('/corporate/sign-in')\r\n             return\r\n         }\r\n \r\n-        console.log('‚úÖ Corporate user authenticated:', user.name)\r\n-    }, [user, loading, router])\r\n+        console.log('‚úÖ [CorporateProtectedRoute] Corporate user authenticated:', user.name)\r\n+    }, [user, isAuthenticated, isLoading, router])\r\n \r\n     // Show loading while checking authentication\r\n-    if (loading) {\r\n+    if (isLoading) {\r\n         return (\r\n             <div className=\"corporate-loading-container\">\r\n                 <div className=\"corporate-loading-content\">\r\n                     <div className=\"corporate-spinner\"></div>\r\n@@ -89,10 +99,61 @@\n         )\r\n     }\r\n \r\n     // Don't render anything if redirecting\r\n-    if (!user || user.userType !== 'Corporate') {\r\n-        return null\r\n+    if (!isAuthenticated || !user || user.userType !== 'Corporate') {\r\n+        return (\r\n+            <div className=\"corporate-loading-container\">\r\n+                <div className=\"corporate-loading-content\">\r\n+                    <div className=\"corporate-spinner\"></div>\r\n+                    <h3>Redirecting...</h3>\r\n+                    <p>Please wait while we redirect you.</p>\r\n+                </div>\r\n+                <style jsx>{`\r\n+                    .corporate-loading-container {\r\n+                        min-height: 100vh;\r\n+                        display: flex;\r\n+                        align-items: center;\r\n+                        justify-content: center;\r\n+                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n+                        padding: 20px;\r\n+                    }\r\n+                    .corporate-loading-content {\r\n+                        text-align: center;\r\n+                        background: white;\r\n+                        padding: 60px 40px;\r\n+                        border-radius: 20px;\r\n+                        box-shadow: 0 20px 40px rgba(0,0,0,0.1);\r\n+                        max-width: 400px;\r\n+                        width: 100%;\r\n+                    }\r\n+                    .corporate-spinner {\r\n+                        width: 50px;\r\n+                        height: 50px;\r\n+                        border: 4px solid #f3f3f3;\r\n+                        border-top: 4px solid #667eea;\r\n+                        border-radius: 50%;\r\n+                        animation: spin 1s linear infinite;\r\n+                        margin: 0 auto 20px;\r\n+                    }\r\n+                    @keyframes spin {\r\n+                        0% { transform: rotate(0deg); }\r\n+                        100% { transform: rotate(360deg); }\r\n+                    }\r\n+                    h3 {\r\n+                        color: #333;\r\n+                        margin-bottom: 10px;\r\n+                        font-size: 24px;\r\n+                        font-weight: 600;\r\n+                    }\r\n+                    p {\r\n+                        color: #666;\r\n+                        margin: 0;\r\n+                        font-size: 16px;\r\n+                    }\r\n+                `}</style>\r\n+            </div>\r\n+        )\r\n     }\r\n \r\n     // Render protected content for authenticated corporate users\r\n     return children\r\n"
                }
            ],
            "date": 1753614542818,
            "name": "Commit-0",
            "content": "/**\r\n * Corporate Protected Route Component\r\n * Ensures only authenticated corporate users can access corporate pages\r\n */\r\n\r\n'use client'\r\nimport { useContext, useEffect } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport AuthContext from '@/components/context/AuthContext'\r\n\r\nexport default function CorporateProtectedRoute({ children }) {\r\n    const { user, loading } = useContext(AuthContext)\r\n    const router = useRouter()\r\n\r\n    useEffect(() => {\r\n        // Wait for auth context to load\r\n        if (loading) return\r\n\r\n        // If no user is logged in, redirect to corporate sign-in\r\n        if (!user) {\r\n            console.log('üö´ No user authenticated, redirecting to corporate sign-in')\r\n            router.push('/corporate/sign-in')\r\n            return\r\n        }\r\n\r\n        // If user is not a corporate user, redirect to appropriate page\r\n        if (user.userType !== 'Corporate') {\r\n            console.log('üö´ User is not a corporate user, redirecting to home')\r\n            router.push('/')\r\n            return\r\n        }\r\n\r\n        console.log('‚úÖ Corporate user authenticated:', user.name)\r\n    }, [user, loading, router])\r\n\r\n    // Show loading while checking authentication\r\n    if (loading) {\r\n        return (\r\n            <div className=\"corporate-loading-container\">\r\n                <div className=\"corporate-loading-content\">\r\n                    <div className=\"corporate-spinner\"></div>\r\n                    <h3>Verifying Corporate Access...</h3>\r\n                    <p>Please wait while we authenticate your corporate account.</p>\r\n                </div>\r\n                <style jsx>{`\r\n                    .corporate-loading-container {\r\n                        min-height: 100vh;\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n                        padding: 20px;\r\n                    }\r\n                    .corporate-loading-content {\r\n                        text-align: center;\r\n                        background: white;\r\n                        padding: 60px 40px;\r\n                        border-radius: 20px;\r\n                        box-shadow: 0 20px 40px rgba(0,0,0,0.1);\r\n                        max-width: 400px;\r\n                        width: 100%;\r\n                    }\r\n                    .corporate-spinner {\r\n                        width: 50px;\r\n                        height: 50px;\r\n                        border: 4px solid #f3f3f3;\r\n                        border-top: 4px solid #667eea;\r\n                        border-radius: 50%;\r\n                        animation: spin 1s linear infinite;\r\n                        margin: 0 auto 20px;\r\n                    }\r\n                    @keyframes spin {\r\n                        0% { transform: rotate(0deg); }\r\n                        100% { transform: rotate(360deg); }\r\n                    }\r\n                    h3 {\r\n                        color: #333;\r\n                        margin-bottom: 10px;\r\n                        font-size: 24px;\r\n                        font-weight: 600;\r\n                    }\r\n                    p {\r\n                        color: #666;\r\n                        margin: 0;\r\n                        font-size: 16px;\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Don't render anything if redirecting\r\n    if (!user || user.userType !== 'Corporate') {\r\n        return null\r\n    }\r\n\r\n    // Render protected content for authenticated corporate users\r\n    return children\r\n}\r\n"
        }
    ]
}