{
    "sourceFile": "Ninico/components/admin/PagesManagement/SubcategoriesList.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753197903974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753197903974,
            "name": "Commit-0",
            "content": "'use client'\r\nimport React from 'react'\r\n\r\nexport default function SubcategoriesList({\r\n  mainCategories,\r\n  selectedMainCategory,\r\n  selectedCategorySubcategories,\r\n  categoryConfig,\r\n  setCategoryConfig,\r\n  handleCategoryToggle\r\n}) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n        <h6 className=\"mb-0\">\r\n          <i className=\"bi bi-tag text-secondary me-2\"></i>\r\n          Subcategories\r\n          {selectedMainCategory && (\r\n            <span className=\"text-muted ms-2\">\r\n              for \"{mainCategories.find(cat => cat.id === selectedMainCategory)?.name}\"\r\n            </span>\r\n          )}\r\n        </h6>\r\n        {selectedCategorySubcategories.length > 0 && (\r\n          <span className=\"badge bg-secondary\">\r\n            {selectedCategorySubcategories.length} subcategories\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className=\"card-body p-0\">\r\n        {selectedMainCategory ? (\r\n          selectedCategorySubcategories.length > 0 ? (\r\n            <>\r\n              {/* Subcategories Stats */}\r\n              <div className=\"p-3 bg-light border-bottom\">\r\n                <div className=\"row text-center\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"small\">\r\n                      <strong>{selectedCategorySubcategories.filter(sub => categoryConfig.categoryIds.includes(sub.id)).length}</strong>\r\n                      <br />\r\n                      <span className=\"text-muted\">Selected</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"small\">\r\n                      <strong>{selectedCategorySubcategories.filter(sub => sub.status).length}</strong>\r\n                      <br />\r\n                      <span className=\"text-muted\">Active</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Quick Actions for Subcategories */}\r\n              <div className=\"p-2 border-bottom\">\r\n                <div className=\"d-flex gap-1\">\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-outline-success btn-sm\"\r\n                    onClick={() => {\r\n                      const currentSubIds = selectedCategorySubcategories.map(cat => cat.id)\r\n                      setCategoryConfig(prev => ({\r\n                        ...prev,\r\n                        categoryIds: [...new Set([...prev.categoryIds, ...currentSubIds])]\r\n                      }))\r\n                    }}\r\n                  >\r\n                    <i className=\"bi bi-check-all me-1\"></i>\r\n                    Select All\r\n                  </button>\r\n                  \r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-outline-secondary btn-sm\"\r\n                    onClick={() => {\r\n                      const currentSubIds = selectedCategorySubcategories.map(cat => cat.id)\r\n                      setCategoryConfig(prev => ({\r\n                        ...prev,\r\n                        categoryIds: prev.categoryIds.filter(id => !currentSubIds.includes(id))\r\n                      }))\r\n                    }}\r\n                  >\r\n                    <i className=\"bi bi-x-circle me-1\"></i>\r\n                    Clear All\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Subcategories List */}\r\n              <div className=\"list-group list-group-flush\" style={{ maxHeight: '350px', overflowY: 'auto' }}>\r\n                {selectedCategorySubcategories.map((subcategory, index) => {\r\n                  // Use the flat categoryIds array for now since categories is still an array\r\n                  const isSelected = categoryConfig.categoryIds.includes(subcategory.id)\r\n                  \r\n                  return (\r\n                    <div \r\n                      key={subcategory.id} \r\n                      className={`list-group-item list-group-item-action border-0 ${isSelected ? 'bg-success bg-opacity-10 border-start border-success border-3' : ''}`}\r\n                    >\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <div className=\"form-check me-3\">\r\n                          <input \r\n                            className=\"form-check-input form-check-input-success\" \r\n                            type=\"checkbox\" \r\n                            id={`sub-category-${subcategory.id}`}\r\n                            checked={isSelected}\r\n                            onChange={() => handleCategoryToggle(subcategory.id, selectedMainCategory)}\r\n                          />\r\n                        </div>\r\n                        \r\n                        {subcategory.image && (\r\n                          <img \r\n                            src={subcategory.image} \r\n                            alt={subcategory.name}\r\n                            className=\"me-3 flex-shrink-0 border\"\r\n                            style={{ width: '36px', height: '36px', objectFit: 'cover', borderRadius: '6px' }}\r\n                          />\r\n                        )}\r\n                        \r\n                        <div className=\"flex-grow-1\">\r\n                          <div className=\"d-flex justify-content-between align-items-start\">\r\n                            <div>\r\n                              <h6 className=\"mb-1 text-dark fw-semibold\">\r\n                                <i className=\"bi bi-tag text-success me-1\" style={{ fontSize: '12px' }}></i>\r\n                                {subcategory.name}\r\n                              </h6>\r\n                              {subcategory.description && (\r\n                                <p className=\"mb-1 text-muted small\">{subcategory.description}</p>\r\n                              )}\r\n                              <div className=\"d-flex gap-1 align-items-center\">\r\n                                <span className=\"badge bg-secondary\" style={{ fontSize: '9px' }}>\r\n                                  Subcategory\r\n                                </span>\r\n                                <span className={`badge ${subcategory.status ? 'bg-success' : 'bg-danger'}`} style={{ fontSize: '9px' }}>\r\n                                  {subcategory.status ? 'Active' : 'Inactive'}\r\n                                </span>\r\n                                {isSelected && (\r\n                                  <span className=\"badge bg-primary\" style={{ fontSize: '9px' }}>\r\n                                    <i className=\"bi bi-check-circle me-1\"></i>\r\n                                    Selected\r\n                                  </span>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"text-end\">\r\n                              <small className=\"text-muted\">#{index + 1}</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n\r\n              {/* Footer Info */}\r\n              <div className=\"p-2 bg-light border-top text-center\">\r\n                <small className=\"text-muted\">\r\n                  <i className=\"bi bi-info-circle me-1\"></i>\r\n                  Click checkboxes to select subcategories for homepage display\r\n                </small>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"text-center py-5\">\r\n              <i className=\"bi bi-folder2-open text-muted\" style={{ fontSize: '2.5rem' }}></i>\r\n              <h6 className=\"mt-3 text-muted\">No subcategories found</h6>\r\n              <p className=\"text-muted mb-3\">\r\n                The category \"{mainCategories.find(cat => cat.id === selectedMainCategory)?.name}\" doesn't have any subcategories yet.\r\n              </p>\r\n              <button \r\n                className=\"btn btn-outline-primary btn-sm\"\r\n                onClick={() => {\r\n                  // You can add navigation to create subcategory here\r\n                  alert('Navigate to Categories > Subcategories to create subcategories for this category')\r\n                }}\r\n              >\r\n                <i className=\"bi bi-plus-circle me-1\"></i>\r\n                Create Subcategories\r\n              </button>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"text-center py-5\">\r\n            <i className=\"bi bi-arrow-left text-primary\" style={{ fontSize: '2.5rem' }}></i>\r\n            <h6 className=\"mt-3 text-muted\">Select a main category</h6>\r\n            <p className=\"text-muted mb-0\">\r\n              Click on a main category from the left panel to view and select its subcategories.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"
        }
    ]
}