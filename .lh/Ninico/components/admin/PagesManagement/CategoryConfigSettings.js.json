{
    "sourceFile": "Ninico/components/admin/PagesManagement/CategoryConfigSettings.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753197903972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753197903972,
            "name": "Commit-0",
            "content": "'use client'\r\nimport React from 'react'\r\n\r\nexport default function CategoryConfigSettings({ \r\n  categoryConfig, \r\n  setCategoryConfig, \r\n  getCurrentCounts,\r\n  handleMaxCategoriesChange,\r\n  MAX_MAIN_CATEGORIES,\r\n  MIN_MAIN_CATEGORIES,\r\n  MAX_SUBCATEGORIES_PER_CATEGORY,\r\n  selectedMainCategory,\r\n  availableCategories = [],\r\n  subcategories = []\r\n}) {\r\n  return (\r\n    <>\r\n      {/* Enable/Disable Section */}\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-12\">\r\n          <div className=\"form-check form-switch\">\r\n            <input \r\n              className=\"form-check-input\" \r\n              type=\"checkbox\" \r\n              id=\"enableCategorySection\"\r\n              checked={categoryConfig.enabled}\r\n              onChange={(e) => setCategoryConfig(prev => ({ ...prev, enabled: e.target.checked }))}\r\n            />\r\n            <label className=\"form-check-label fw-semibold\" htmlFor=\"enableCategorySection\">\r\n              Enable Category Section\r\n            </label>\r\n          </div>\r\n          <small className=\"text-muted\">Turn on/off the category section on the homepage</small>\r\n        </div>\r\n      </div>\r\n\r\n      {categoryConfig.enabled && (\r\n        <>\r\n          {/* Selection Summary and Validation */}\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card border-info\">\r\n                <div className=\"card-header bg-info bg-opacity-10\">\r\n                  <h6 className=\"mb-0 text-info\">\r\n                    <i className=\"bi bi-info-circle me-2\"></i>\r\n                    Selection Summary\r\n                  </h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className={`d-flex justify-content-between align-items-center p-2 rounded ${getCurrentCounts().mainCategoriesCount >= MIN_MAIN_CATEGORIES && getCurrentCounts().mainCategoriesCount <= MAX_MAIN_CATEGORIES ? 'bg-success bg-opacity-10 text-success' : 'bg-warning bg-opacity-10 text-warning'}`}>\r\n                        <span className=\"fw-semibold\">\r\n                          <i className=\"bi bi-grid me-1\"></i>\r\n                          Main Categories:\r\n                        </span>\r\n                        <span className=\"badge bg-primary\">\r\n                          {getCurrentCounts().mainCategoriesCount} / {MAX_MAIN_CATEGORIES}\r\n                        </span>\r\n                      </div>\r\n                      {getCurrentCounts().mainCategoriesCount < MIN_MAIN_CATEGORIES && (\r\n                        <small className=\"text-warning\">\r\n                          <i className=\"bi bi-exclamation-triangle me-1\"></i>\r\n                          Minimum {MIN_MAIN_CATEGORIES} main category required\r\n                        </small>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"d-flex justify-content-between align-items-center p-2 rounded bg-info bg-opacity-10 text-info\">\r\n                        <span className=\"fw-semibold\">\r\n                          <i className=\"bi bi-tags me-1\"></i>\r\n                          Total Subcategories:\r\n                        </span>\r\n                        <span className=\"badge bg-info\">\r\n                          {getCurrentCounts().totalSubcategoriesCount}\r\n                        </span>\r\n                      </div>\r\n                      {selectedMainCategory && (\r\n                        <small className=\"text-muted\">\r\n                          <i className=\"bi bi-arrow-right me-1\"></i>\r\n                          Selected category: {getCurrentCounts().selectedCategorySubCount} / {MAX_SUBCATEGORIES_PER_CATEGORY}\r\n                        </small>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Configuration Options */}\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-md-4\">\r\n              <label className=\"form-label fw-semibold\">Maximum Categories to Show</label>\r\n              <input \r\n                type=\"number\" \r\n                className=\"form-control\"\r\n                min=\"1\"\r\n                max=\"20\"\r\n                value={categoryConfig.maxCategories}\r\n                onChange={(e) => handleMaxCategoriesChange(e.target.value)}\r\n              />\r\n              <small className=\"text-muted\">Limit how many categories appear (0 = no limit)</small>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <label className=\"form-label fw-semibold\">Layout Style</label>\r\n              <select \r\n                className=\"form-select\"\r\n                value={categoryConfig.layout}\r\n                onChange={(e) => setCategoryConfig(prev => ({ ...prev, layout: e.target.value }))}\r\n              >\r\n                <option value=\"grid\">Grid Layout</option>\r\n                <option value=\"carousel\">Carousel</option>\r\n                <option value=\"list\">List View</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"form-check mt-4\">\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"checkbox\" \r\n                  id=\"showSubcategories\"\r\n                  checked={categoryConfig.showSubcategories}\r\n                  onChange={(e) => setCategoryConfig(prev => ({ ...prev, showSubcategories: e.target.checked }))}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"showSubcategories\">\r\n                  Show subcategories on hover\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Selection Summary */}\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-12\">\r\n              <div className=\"alert alert-info d-flex align-items-center\">\r\n                <i className=\"bi bi-info-circle me-2\"></i>\r\n                <div>\r\n                  <strong>Selection Summary:</strong> {categoryConfig.categoryIds.length} categories selected \r\n                  ({categoryConfig.categoryIds.filter(id => {\r\n                    // Count main categories\r\n                    return availableCategories?.some(cat => cat.id === id && !cat.parent) || false\r\n                  }).length} main categories, {categoryConfig.categoryIds.filter(id => {\r\n                    // Count subcategories  \r\n                    return subcategories?.some(cat => cat.id === id) || false\r\n                  }).length} subcategories)\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"
        }
    ]
}