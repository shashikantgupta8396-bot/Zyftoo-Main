{
    "sourceFile": "Ninico/components/admin/AnalyticsDashboard.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753711237033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753711237033,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { useProductAnalytics } from '../../hooks/useProductAnalytics';\r\n\r\nconst AnalyticsDashboard = () => {\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedTimeFrame, setSelectedTimeFrame] = useState('all');\r\n\r\n  const { getAnalyticsDashboard, getPopularProducts } = useProductAnalytics();\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const [dashboardResponse, popularProductsResponse] = await Promise.all([\r\n          getAnalyticsDashboard(),\r\n          getPopularProducts({ limit: 10, timeFrame: selectedTimeFrame })\r\n        ]);\r\n\r\n        setDashboardData({\r\n          ...dashboardResponse,\r\n          popularProducts: popularProductsResponse.products\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching dashboard data:', err);\r\n        setError('Failed to load analytics dashboard');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (getAnalyticsDashboard) {\r\n      fetchDashboardData();\r\n    }\r\n  }, [getAnalyticsDashboard, getPopularProducts, selectedTimeFrame]);\r\n\r\n  const formatNumber = (num) => {\r\n    if (num >= 1000000) {\r\n      return `${(num / 1000000).toFixed(1)}M`;\r\n    } else if (num >= 1000) {\r\n      return `${(num / 1000).toFixed(1)}K`;\r\n    }\r\n    return num?.toString() || '0';\r\n  };\r\n\r\n  const formatPercentage = (value) => {\r\n    return `${parseFloat(value || 0).toFixed(1)}%`;\r\n  };\r\n\r\n  if (!getAnalyticsDashboard) {\r\n    return (\r\n      <div className=\"analytics-dashboard\">\r\n        <div className=\"alert alert-warning\">\r\n          Access denied. Analytics dashboard is only available for administrators.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"analytics-dashboard\">\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '200px' }}>\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"analytics-dashboard\">\r\n        <div className=\"alert alert-danger\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!dashboardData) {\r\n    return (\r\n      <div className=\"analytics-dashboard\">\r\n        <div className=\"alert alert-info\">No analytics data available</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { overview, viewStats, topProducts, popularProducts } = dashboardData;\r\n\r\n  return (\r\n    <div className=\"analytics-dashboard\">\r\n      <div className=\"container-fluid\">\r\n        {/* Header */}\r\n        <div className=\"row mb-4\">\r\n          <div className=\"col-12\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h2 className=\"mb-0\">📊 Product Analytics Dashboard</h2>\r\n              <div className=\"btn-group\" role=\"group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"btn-check\"\r\n                  name=\"timeFrame\"\r\n                  id=\"timeAll\"\r\n                  value=\"all\"\r\n                  checked={selectedTimeFrame === 'all'}\r\n                  onChange={(e) => setSelectedTimeFrame(e.target.value)}\r\n                />\r\n                <label className=\"btn btn-outline-primary\" htmlFor=\"timeAll\">All Time</label>\r\n\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"btn-check\"\r\n                  name=\"timeFrame\"\r\n                  id=\"timeWeekly\"\r\n                  value=\"weekly\"\r\n                  checked={selectedTimeFrame === 'weekly'}\r\n                  onChange={(e) => setSelectedTimeFrame(e.target.value)}\r\n                />\r\n                <label className=\"btn btn-outline-primary\" htmlFor=\"timeWeekly\">This Week</label>\r\n\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"btn-check\"\r\n                  name=\"timeFrame\"\r\n                  id=\"timeMonthly\"\r\n                  value=\"monthly\"\r\n                  checked={selectedTimeFrame === 'monthly'}\r\n                  onChange={(e) => setSelectedTimeFrame(e.target.value)}\r\n                />\r\n                <label className=\"btn btn-outline-primary\" htmlFor=\"timeMonthly\">This Month</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Overview Cards */}\r\n        <div className=\"row mb-4\">\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card bg-primary text-white\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h6 className=\"card-title\">Total Products</h6>\r\n                    <h3 className=\"mb-0\">{formatNumber(overview.totalProducts)}</h3>\r\n                  </div>\r\n                  <div className=\"align-self-center\">\r\n                    <i className=\"fas fa-box fa-2x opacity-75\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card bg-success text-white\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h6 className=\"card-title\">Products with Views</h6>\r\n                    <h3 className=\"mb-0\">{formatNumber(overview.productsWithAnalytics)}</h3>\r\n                    <small>{formatPercentage(overview.viewedProductsPercentage)} of total</small>\r\n                  </div>\r\n                  <div className=\"align-self-center\">\r\n                    <i className=\"fas fa-eye fa-2x opacity-75\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card bg-info text-white\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h6 className=\"card-title\">Total Views</h6>\r\n                    <h3 className=\"mb-0\">{formatNumber(viewStats.totalViews)}</h3>\r\n                    <small>Avg: {formatNumber(viewStats.avgViewsPerProduct)} per product</small>\r\n                  </div>\r\n                  <div className=\"align-self-center\">\r\n                    <i className=\"fas fa-chart-line fa-2x opacity-75\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card bg-warning text-white\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h6 className=\"card-title\">Corporate Views</h6>\r\n                    <h3 className=\"mb-0\">{formatNumber(viewStats.totalCorporateViews)}</h3>\r\n                    <small>{formatPercentage((viewStats.totalCorporateViews / viewStats.totalViews) * 100)} of total</small>\r\n                  </div>\r\n                  <div className=\"align-self-center\">\r\n                    <i className=\"fas fa-building fa-2x opacity-75\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Charts Row */}\r\n        <div className=\"row mb-4\">\r\n          {/* Popular Products Table */}\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"card-title mb-0\">\r\n                  🔥 Most Popular Products ({selectedTimeFrame === 'all' ? 'All Time' : \r\n                    selectedTimeFrame === 'weekly' ? 'This Week' : 'This Month'})\r\n                </h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                {popularProducts && popularProducts.length > 0 ? (\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Rank</th>\r\n                          <th>Product</th>\r\n                          <th>Category</th>\r\n                          <th>Views</th>\r\n                          <th>Score</th>\r\n                          <th>Price</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {popularProducts.map((product, index) => (\r\n                          <tr key={product._id}>\r\n                            <td>\r\n                              <span className=\"badge bg-primary\">#{index + 1}</span>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <img\r\n                                  src={product.images?.[0] || '/assets/img/product/product-placeholder.jpg'}\r\n                                  alt={product.name}\r\n                                  style={{ width: '40px', height: '40px', objectFit: 'cover' }}\r\n                                  className=\"rounded me-2\"\r\n                                />\r\n                                <div>\r\n                                  <strong>{product.name}</strong>\r\n                                  {product.hasActiveCorporatePricing && (\r\n                                    <span className=\"badge bg-info ms-2\">Bulk</span>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n                            <td>{product.category}</td>\r\n                            <td>{formatNumber(product.totalViews)}</td>\r\n                            <td>{product.popularityRank?.toFixed(1) || '0'}</td>\r\n                            <td>₹{formatNumber(product.displayPrice)}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"text-muted\">No popular products data available</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Top Performing Products (All Time) */}\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"card-title mb-0\">🏆 Top Performers (All Time)</h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                {topProducts && topProducts.length > 0 ? (\r\n                  <div className=\"list-group list-group-flush\">\r\n                    {topProducts.map((product, index) => (\r\n                      <div key={product._id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                        <div>\r\n                          <strong>#{index + 1}</strong>\r\n                          <div className=\"small text-muted\">{product.name}</div>\r\n                        </div>\r\n                        <div className=\"text-end\">\r\n                          <div className=\"small\">{formatNumber(product.analytics?.views?.total || 0)} views</div>\r\n                          <div className=\"small text-muted\">Score: {product.analytics?.popularityScore?.toFixed(1) || '0'}</div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"text-muted\">No top products data available</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* View Distribution */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"card-title mb-0\">👥 View Distribution</h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row text-center\">\r\n                  <div className=\"col-4\">\r\n                    <h4 className=\"text-primary\">{formatNumber(viewStats.totalIndividualViews)}</h4>\r\n                    <small className=\"text-muted\">Individual Users</small>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <h4 className=\"text-warning\">{formatNumber(viewStats.totalCorporateViews)}</h4>\r\n                    <small className=\"text-muted\">Corporate Users</small>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <h4 className=\"text-info\">{formatNumber(viewStats.totalViews)}</h4>\r\n                    <small className=\"text-muted\">Total Views</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"card-title mb-0\">📈 Engagement Metrics</h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row text-center\">\r\n                  <div className=\"col-6\">\r\n                    <h4 className=\"text-success\">{formatPercentage(overview.viewedProductsPercentage)}</h4>\r\n                    <small className=\"text-muted\">Products Viewed</small>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <h4 className=\"text-info\">{formatNumber(viewStats.avgViewsPerProduct)}</h4>\r\n                    <small className=\"text-muted\">Avg Views/Product</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n"
        }
    ]
}