{
    "sourceFile": "Ninico/components/admin/CorporatePricingAdmin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753640931590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753640931590,
            "name": "Commit-0",
            "content": "'use client'\r\nimport { useState, useEffect } from 'react'\r\nimport { formatPrice } from '@/util/productPricingHelper'\r\n\r\nexport default function CorporatePricingAdmin({ productId, onSave, initialData = null }) {\r\n    const [corporatePricing, setCorporatePricing] = useState({\r\n        enabled: false,\r\n        minimumOrderQuantity: 1,\r\n        priceTiers: [],\r\n        customQuoteThreshold: null\r\n    })\r\n\r\n    const [newTier, setNewTier] = useState({\r\n        minQuantity: '',\r\n        maxQuantity: '',\r\n        pricePerUnit: '',\r\n        discount: '',\r\n        description: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (initialData) {\r\n            setCorporatePricing(initialData)\r\n        }\r\n    }, [initialData])\r\n\r\n    const addTier = () => {\r\n        if (newTier.minQuantity && newTier.pricePerUnit) {\r\n            const tier = {\r\n                minQuantity: parseInt(newTier.minQuantity),\r\n                maxQuantity: newTier.maxQuantity ? parseInt(newTier.maxQuantity) : null,\r\n                pricePerUnit: parseFloat(newTier.pricePerUnit),\r\n                discount: parseFloat(newTier.discount) || 0,\r\n                description: newTier.description || ''\r\n            }\r\n\r\n            setCorporatePricing(prev => ({\r\n                ...prev,\r\n                priceTiers: [...prev.priceTiers, tier].sort((a, b) => a.minQuantity - b.minQuantity)\r\n            }))\r\n\r\n            setNewTier({\r\n                minQuantity: '',\r\n                maxQuantity: '',\r\n                pricePerUnit: '',\r\n                discount: '',\r\n                description: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    const removeTier = (index) => {\r\n        setCorporatePricing(prev => ({\r\n            ...prev,\r\n            priceTiers: prev.priceTiers.filter((_, i) => i !== index)\r\n        }))\r\n    }\r\n\r\n    const handleSave = () => {\r\n        onSave(productId, corporatePricing)\r\n    }\r\n\r\n    return (\r\n        <div className=\"corporate-pricing-admin\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <h5>Corporate Pricing Configuration</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {/* Enable/Disable Toggle */}\r\n                    <div className=\"form-check form-switch mb-4\">\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"enableCorporatePricing\"\r\n                            checked={corporatePricing.enabled}\r\n                            onChange={(e) => setCorporatePricing(prev => ({\r\n                                ...prev,\r\n                                enabled: e.target.checked\r\n                            }))}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"enableCorporatePricing\">\r\n                            <strong>Enable Corporate Pricing</strong>\r\n                        </label>\r\n                    </div>\r\n\r\n                    {corporatePricing.enabled && (\r\n                        <>\r\n                            {/* Basic Settings */}\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-md-6\">\r\n                                    <label className=\"form-label\">Minimum Order Quantity</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control\"\r\n                                        value={corporatePricing.minimumOrderQuantity}\r\n                                        onChange={(e) => setCorporatePricing(prev => ({\r\n                                            ...prev,\r\n                                            minimumOrderQuantity: parseInt(e.target.value) || 1\r\n                                        }))}\r\n                                        min=\"1\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <label className=\"form-label\">Custom Quote Threshold (Optional)</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control\"\r\n                                        value={corporatePricing.customQuoteThreshold || ''}\r\n                                        onChange={(e) => setCorporatePricing(prev => ({\r\n                                            ...prev,\r\n                                            customQuoteThreshold: e.target.value ? parseInt(e.target.value) : null\r\n                                        }))}\r\n                                        placeholder=\"e.g., 1000\"\r\n                                    />\r\n                                    <small className=\"form-text text-muted\">\r\n                                        Orders above this quantity will show \"Request Quote\"\r\n                                    </small>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Price Tiers */}\r\n                            <div className=\"mb-4\">\r\n                                <h6>Price Tiers</h6>\r\n                                \r\n                                {/* Existing Tiers */}\r\n                                {corporatePricing.priceTiers.length > 0 && (\r\n                                    <div className=\"table-responsive mb-3\">\r\n                                        <table className=\"table table-bordered\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Min Qty</th>\r\n                                                    <th>Max Qty</th>\r\n                                                    <th>Price/Unit</th>\r\n                                                    <th>Discount %</th>\r\n                                                    <th>Description</th>\r\n                                                    <th>Actions</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {corporatePricing.priceTiers.map((tier, index) => (\r\n                                                    <tr key={index}>\r\n                                                        <td>{tier.minQuantity}</td>\r\n                                                        <td>{tier.maxQuantity || 'âˆž'}</td>\r\n                                                        <td>{formatPrice(tier.pricePerUnit)}</td>\r\n                                                        <td>{tier.discount}%</td>\r\n                                                        <td>{tier.description}</td>\r\n                                                        <td>\r\n                                                            <button\r\n                                                                className=\"btn btn-danger btn-sm\"\r\n                                                                onClick={() => removeTier(index)}\r\n                                                            >\r\n                                                                Remove\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Add New Tier */}\r\n                                <div className=\"border p-3 bg-light rounded\">\r\n                                    <h6>Add New Price Tier</h6>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <label className=\"form-label\">Min Quantity</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                value={newTier.minQuantity}\r\n                                                onChange={(e) => setNewTier(prev => ({\r\n                                                    ...prev,\r\n                                                    minQuantity: e.target.value\r\n                                                }))}\r\n                                                placeholder=\"50\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <label className=\"form-label\">Max Quantity</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                value={newTier.maxQuantity}\r\n                                                onChange={(e) => setNewTier(prev => ({\r\n                                                    ...prev,\r\n                                                    maxQuantity: e.target.value\r\n                                                }))}\r\n                                                placeholder=\"99 (empty for âˆž)\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <label className=\"form-label\">Price/Unit (â‚¹)</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                step=\"0.01\"\r\n                                                className=\"form-control\"\r\n                                                value={newTier.pricePerUnit}\r\n                                                onChange={(e) => setNewTier(prev => ({\r\n                                                    ...prev,\r\n                                                    pricePerUnit: e.target.value\r\n                                                }))}\r\n                                                placeholder=\"450\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <label className=\"form-label\">Discount %</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                value={newTier.discount}\r\n                                                onChange={(e) => setNewTier(prev => ({\r\n                                                    ...prev,\r\n                                                    discount: e.target.value\r\n                                                }))}\r\n                                                placeholder=\"10\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <label className=\"form-label\">Description</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                value={newTier.description}\r\n                                                onChange={(e) => setNewTier(prev => ({\r\n                                                    ...prev,\r\n                                                    description: e.target.value\r\n                                                }))}\r\n                                                placeholder=\"Small bulk discount\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-1\">\r\n                                            <label className=\"form-label\">&nbsp;</label>\r\n                                            <button\r\n                                                className=\"btn btn-success d-block\"\r\n                                                onClick={addTier}\r\n                                                disabled={!newTier.minQuantity || !newTier.pricePerUnit}\r\n                                            >\r\n                                                Add\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Preview */}\r\n                            {corporatePricing.priceTiers.length > 0 && (\r\n                                <div className=\"alert alert-info\">\r\n                                    <h6>Preview:</h6>\r\n                                    <ul className=\"mb-0\">\r\n                                        {corporatePricing.priceTiers.map((tier, index) => (\r\n                                            <li key={index}>\r\n                                                {tier.minQuantity} - {tier.maxQuantity || 'âˆž'} units: \r\n                                                <strong> {formatPrice(tier.pricePerUnit)}/unit</strong>\r\n                                                {tier.discount > 0 && <span className=\"text-success\"> ({tier.discount}% off)</span>}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n\r\n                    {/* Save Button */}\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={handleSave}\r\n                        >\r\n                            Save Corporate Pricing\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <style jsx>{`\r\n                .corporate-pricing-admin {\r\n                    max-width: 100%;\r\n                }\r\n                \r\n                .table th {\r\n                    background-color: #f8f9fa;\r\n                    font-weight: 600;\r\n                }\r\n                \r\n                .form-check-input:checked {\r\n                    background-color: #007bff;\r\n                    border-color: #007bff;\r\n                }\r\n                \r\n                .alert-info {\r\n                    border-left: 4px solid #007bff;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n"
        }
    ]
}