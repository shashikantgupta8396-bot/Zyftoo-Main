{
    "sourceFile": "Ninico/components/shop/PopularProducts.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753711237034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753711237034,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { useProductAnalytics } from '../../hooks/useProductAnalytics';\r\n\r\nconst PopularProducts = ({ \r\n  title = \"Popular Products\",\r\n  limit = 8,\r\n  category = null,\r\n  timeFrame = 'all', // all, daily, weekly, monthly\r\n  showViewCount = false,\r\n  className = \"\",\r\n  showAsGrid = true,\r\n  showForUserType = 'all' // all, individual, corporate\r\n}) => {\r\n  const [popularProducts, setPopularProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const { \r\n    getPopularProducts, \r\n    createTrackingProps,\r\n    getUserType \r\n  } = useProductAnalytics();\r\n\r\n  useEffect(() => {\r\n    const fetchPopularProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        const currentUserType = getUserType();\r\n        const effectiveUserType = showForUserType === 'all' ? 'all' : \r\n                                 showForUserType === 'current' ? currentUserType : \r\n                                 showForUserType;\r\n\r\n        const response = await getPopularProducts({\r\n          limit,\r\n          category,\r\n          timeFrame,\r\n          userType: effectiveUserType\r\n        });\r\n\r\n        setPopularProducts(response.products || []);\r\n      } catch (err) {\r\n        console.error('Error fetching popular products:', err);\r\n        setError('Failed to load popular products');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPopularProducts();\r\n  }, [limit, category, timeFrame, showForUserType, getPopularProducts, getUserType]);\r\n\r\n  const formatPrice = (product) => {\r\n    const price = product.displayPrice || product.retailPrice?.sellingPrice || product.price || 0;\r\n    return new Intl.NumberFormat('en-IN', {\r\n      style: 'currency',\r\n      currency: 'INR',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(price);\r\n  };\r\n\r\n  const formatViewCount = (count) => {\r\n    if (count >= 1000) {\r\n      return `${(count / 1000).toFixed(1)}k`;\r\n    }\r\n    return count.toString();\r\n  };\r\n\r\n  const getProductLink = (product) => {\r\n    const userType = getUserType();\r\n    const basePath = userType === 'corporate' ? '/corporate/products' : '/shop-details';\r\n    return `${basePath}/${product._id}`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={`popular-products ${className}`}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"section-title text-center mb-50\">\r\n                <h2>{title}</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`row ${showAsGrid ? 'gy-30' : ''}`}>\r\n            {[...Array(4)].map((_, index) => (\r\n              <div key={index} className={showAsGrid ? \"col-xl-3 col-lg-4 col-md-6\" : \"col-12\"}>\r\n                <div className=\"tp-product-item p-relative transition-3 mb-25\">\r\n                  <div className=\"tp-product-thumb p-relative fix\">\r\n                    <div className=\"skeleton-box\" style={{ height: '200px', backgroundColor: '#f0f0f0' }}></div>\r\n                  </div>\r\n                  <div className=\"tp-product-content\">\r\n                    <div className=\"skeleton-box\" style={{ height: '20px', backgroundColor: '#f0f0f0', marginBottom: '10px' }}></div>\r\n                    <div className=\"skeleton-box\" style={{ height: '16px', backgroundColor: '#f0f0f0', width: '60%' }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={`popular-products ${className}`}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"section-title text-center mb-50\">\r\n                <h2>{title}</h2>\r\n                <p className=\"text-danger\">{error}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (popularProducts.length === 0) {\r\n    return (\r\n      <div className={`popular-products ${className}`}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"section-title text-center mb-50\">\r\n                <h2>{title}</h2>\r\n                <p className=\"text-muted\">No popular products found</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`popular-products ${className}`}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12\">\r\n            <div className=\"section-title text-center mb-50\">\r\n              <h2>{title}</h2>\r\n              {timeFrame !== 'all' && (\r\n                <p className=\"text-muted\">\r\n                  Most viewed {timeFrame === 'daily' ? 'today' : \r\n                            timeFrame === 'weekly' ? 'this week' : \r\n                            'this month'}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`row ${showAsGrid ? 'gy-30' : ''}`}>\r\n          {popularProducts.map((product, index) => {\r\n            const trackingProps = createTrackingProps(product, {\r\n              listType: 'popular',\r\n              position: index + 1,\r\n              timeFrame\r\n            });\r\n\r\n            return (\r\n              <div \r\n                key={product._id} \r\n                className={showAsGrid ? \"col-xl-3 col-lg-4 col-md-6\" : \"col-12\"}\r\n              >\r\n                <div className=\"tp-product-item p-relative transition-3 mb-25\">\r\n                  <div className=\"tp-product-thumb p-relative fix\">\r\n                    <Link \r\n                      href={getProductLink(product)}\r\n                      {...trackingProps}\r\n                    >\r\n                      <Image\r\n                        src={product.images?.[0] || \"/assets/img/product/product-placeholder.jpg\"}\r\n                        alt={product.name}\r\n                        width={270}\r\n                        height={250}\r\n                        className=\"product-image\"\r\n                        style={{ objectFit: 'cover' }}\r\n                      />\r\n                    </Link>\r\n                    \r\n                    {/* Popularity indicator */}\r\n                    <div className=\"tp-product-badge\">\r\n                      <span className=\"product-hot\">\r\n                        üî• #{index + 1}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* View count badge */}\r\n                    {showViewCount && product.totalViews > 0 && (\r\n                      <div className=\"tp-product-view-count\">\r\n                        <span className=\"view-count-badge\">\r\n                          üëÅÔ∏è {formatViewCount(product.totalViews)}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Corporate pricing indicator */}\r\n                    {product.hasActiveCorporatePricing && (\r\n                      <div className=\"tp-product-corporate-badge\">\r\n                        <span className=\"corporate-badge\">\r\n                          Bulk Pricing\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"tp-product-content\">\r\n                    <div className=\"tp-product-category\">\r\n                      <Link href={`/shop?category=${product.category}`}>\r\n                        {product.category}\r\n                      </Link>\r\n                    </div>\r\n                    <h3 className=\"tp-product-title\">\r\n                      <Link \r\n                        href={getProductLink(product)}\r\n                        {...trackingProps}\r\n                      >\r\n                        {product.name}\r\n                      </Link>\r\n                    </h3>\r\n                    <div className=\"tp-product-price-wrapper\">\r\n                      <span className=\"tp-product-price new-price\">\r\n                        {formatPrice(product)}\r\n                      </span>\r\n                      {product.retailPrice?.originalPrice && \r\n                       product.retailPrice.originalPrice > product.displayPrice && (\r\n                        <span className=\"tp-product-price old-price\">\r\n                          {formatPrice({ displayPrice: product.retailPrice.originalPrice })}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    {/* Popularity score for debugging (remove in production) */}\r\n                    {process.env.NODE_ENV === 'development' && (\r\n                      <div className=\"text-muted small\">\r\n                        Score: {product.popularityRank?.toFixed(2)} | Views: {product.totalViews}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .skeleton-box {\r\n          animation: pulse 1.5s ease-in-out infinite alternate;\r\n        }\r\n        \r\n        @keyframes pulse {\r\n          0% { opacity: 1; }\r\n          100% { opacity: 0.5; }\r\n        }\r\n\r\n        .tp-product-view-count {\r\n          position: absolute;\r\n          top: 10px;\r\n          right: 10px;\r\n          z-index: 1;\r\n        }\r\n\r\n        .view-count-badge {\r\n          background: rgba(0, 0, 0, 0.7);\r\n          color: white;\r\n          padding: 4px 8px;\r\n          border-radius: 12px;\r\n          font-size: 12px;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .tp-product-corporate-badge {\r\n          position: absolute;\r\n          bottom: 10px;\r\n          left: 10px;\r\n          z-index: 1;\r\n        }\r\n\r\n        .corporate-badge {\r\n          background: linear-gradient(45deg, #007bff, #0056b3);\r\n          color: white;\r\n          padding: 4px 8px;\r\n          border-radius: 12px;\r\n          font-size: 11px;\r\n          font-weight: 600;\r\n          text-transform: uppercase;\r\n        }\r\n\r\n        .product-hot {\r\n          background: linear-gradient(45deg, #ff6b6b, #ee5a52);\r\n          color: white;\r\n          padding: 4px 8px;\r\n          border-radius: 12px;\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopularProducts;\r\n"
        }
    ]
}