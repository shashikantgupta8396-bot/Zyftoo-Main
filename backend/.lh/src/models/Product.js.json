{
    "sourceFile": "src/models/Product.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752673219713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752678106847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n const mongoose = require('mongoose');\r\n \r\n+\r\n const productSchema = new mongoose.Schema({\r\n   // Basic Info\r\n   name: { type: String, required: true },\r\n   short_description: { type: String },\r\n@@ -10,9 +11,9 @@\n   price: { type: Number, required: true },\r\n   compare_price: { type: Number },\r\n   cost_price: { type: Number },\r\n   sale_price: { type: Number },\r\n-  discount: { type: String }, // e.g., \"20% off\"\r\n+  discount: { type: String },\r\n \r\n   // Inventory\r\n   sku: { type: String },\r\n   quantity: { type: Number, default: 0 },\r\n@@ -33,19 +34,12 @@\n   available_to: { type: Date },\r\n \r\n   // Categories & Tags\r\n   categories: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Category' }],\r\n-  selectedCategory: { type: mongoose.Schema.Types.ObjectId, ref: 'Category' },\r\n-  selectedSubcategories: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Category' }],\r\n   tags: [{ type: String }],\r\n \r\n-  // Product Relations\r\n-  related_products: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Product' }],\r\n-  cross_sell_products: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Product' }],\r\n-  is_random_related_products: { type: Boolean, default: false },\r\n-\r\n   // Images\r\n-  images: [{ type: String }], // URLs\r\n+  images: [{ type: String }],\r\n   product_thumbnail_id: { type: String },\r\n   product_galleries_id: [{ type: String }],\r\n   size_chart_image_id: { type: String },\r\n \r\n@@ -55,18 +49,18 @@\n   product_meta_image_id: { type: String },\r\n \r\n   // Shipping & Tax\r\n   is_free_shipping: { type: Boolean, default: false },\r\n-  tax_id: { type: String }, // could be ref if taxes are stored\r\n+  tax_id: { type: String },\r\n   estimated_delivery_text: { type: String },\r\n   return_policy_text: { type: String },\r\n \r\n   // Flags\r\n   is_featured: { type: Boolean, default: false },\r\n   is_popular: { type: Boolean, default: false },\r\n   is_trending: { type: Boolean, default: false },\r\n   is_return: { type: Boolean, default: false },\r\n-  status: { type: Boolean, default: true }, // published/unpublished\r\n+  status: { type: Boolean, default: true },\r\n \r\n   // Timestamps\r\n   createdAt: { type: Date, default: Date.now },\r\n   updatedAt: { type: Date, default: Date.now }\r\n"
                }
            ],
            "date": 1752673219713,
            "name": "Commit-0",
            "content": "const mongoose = require('mongoose');\r\n\r\nconst productSchema = new mongoose.Schema({\r\n  // Basic Info\r\n  name: { type: String, required: true },\r\n  short_description: { type: String },\r\n  description: { type: String, required: true },\r\n\r\n  // Pricing\r\n  price: { type: Number, required: true },\r\n  compare_price: { type: Number },\r\n  cost_price: { type: Number },\r\n  sale_price: { type: Number },\r\n  discount: { type: String }, // e.g., \"20% off\"\r\n\r\n  // Inventory\r\n  sku: { type: String },\r\n  quantity: { type: Number, default: 0 },\r\n  stock_status: {\r\n    type: String,\r\n    enum: ['in_stock', 'out_of_stock'],\r\n    default: 'in_stock'\r\n  },\r\n  type: {\r\n    type: String,\r\n    enum: ['simple', 'variable'],\r\n    default: 'simple'\r\n  },\r\n  unit: { type: String },\r\n  weight: { type: Number },\r\n  requires_shipping: { type: Boolean, default: true },\r\n  available_from: { type: Date },\r\n  available_to: { type: Date },\r\n\r\n  // Categories & Tags\r\n  categories: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Category' }],\r\n  selectedCategory: { type: mongoose.Schema.Types.ObjectId, ref: 'Category' },\r\n  selectedSubcategories: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Category' }],\r\n  tags: [{ type: String }],\r\n\r\n  // Product Relations\r\n  related_products: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Product' }],\r\n  cross_sell_products: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Product' }],\r\n  is_random_related_products: { type: Boolean, default: false },\r\n\r\n  // Images\r\n  images: [{ type: String }], // URLs\r\n  product_thumbnail_id: { type: String },\r\n  product_galleries_id: [{ type: String }],\r\n  size_chart_image_id: { type: String },\r\n\r\n  // SEO\r\n  meta_title: { type: String },\r\n  meta_description: { type: String },\r\n  product_meta_image_id: { type: String },\r\n\r\n  // Shipping & Tax\r\n  is_free_shipping: { type: Boolean, default: false },\r\n  tax_id: { type: String }, // could be ref if taxes are stored\r\n  estimated_delivery_text: { type: String },\r\n  return_policy_text: { type: String },\r\n\r\n  // Flags\r\n  is_featured: { type: Boolean, default: false },\r\n  is_popular: { type: Boolean, default: false },\r\n  is_trending: { type: Boolean, default: false },\r\n  is_return: { type: Boolean, default: false },\r\n  status: { type: Boolean, default: true }, // published/unpublished\r\n\r\n  // Timestamps\r\n  createdAt: { type: Date, default: Date.now },\r\n  updatedAt: { type: Date, default: Date.now }\r\n});\r\n\r\nmodule.exports = mongoose.model('Product', productSchema);\r\n"
        }
    ]
}